<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>新冠病毒疫情分析学习10-如何批量出图</title>
    <url>/2020/0010-xg/</url>
    <content><![CDATA[<p>本章将介绍如何批量制作疫情地图，如下图所示</p>
<center>  <!--开始居中对齐-->

<p><img src="https://cdn.erek.top/p040302.jpg" alt="示意图" title="示意图"></p>
</center> <!--结束居中对齐-->

<a id="more"></a>

<p>准备数据：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> geopandas <span class="keyword">as</span> gpd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment"># 设置不弹出警告</span></span><br><span class="line">df = pd.read_excel(<span class="string">'*/*/data_ncov.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间序列转换</span></span><br><span class="line">df[<span class="string">'date'</span>] = df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)     <span class="comment"># 先将字段转化为字符串</span></span><br><span class="line">df[<span class="string">'date'</span>] = pd.to_datetime(df[<span class="string">'date'</span>])   <span class="comment"># 再进行时间序列转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取空间数据</span></span><br><span class="line">china_spatial = gpd.GeoDataFrame.from_file(<span class="string">'*/*/chinadata.json'</span>)</span><br><span class="line">china_spatial.head()</span><br></pre></td></tr></table></figure>

<h2 id="一、创建函数绘制某日疫情地图"><a href="#一、创建函数绘制某日疫情地图" class="headerlink" title="一、创建函数绘制某日疫情地图"></a>一、创建函数绘制某日疫情地图</h2><p>梳理一下单日疫情的出图逻辑，以气泡图为例：</p>
<ul>
<li>按照日期提取数据</li>
<li>空间数据匹配</li>
<li>基于某种病理情况，绘制空间气泡图</li>
</ul>
<p>基于这个逻辑，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建函数绘制某日疫情地图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_map1</span><span class="params">(time, tp)</span>:</span></span><br><span class="line">    <span class="comment"># 按照日期筛选数据</span></span><br><span class="line">    datai = df[df[<span class="string">'date'</span>] == time] </span><br><span class="line">    <span class="comment"># 匹配数据</span></span><br><span class="line">    data_chinai = pd.merge(china_spatial, datai, left_on = <span class="string">'name'</span>, right_on = <span class="string">'省市'</span>, how = <span class="string">'left'</span>)</span><br><span class="line">    <span class="keyword">del</span> data_chinai[<span class="string">'name'</span>]  <span class="comment"># 删除多余字段</span></span><br><span class="line">    <span class="comment"># 设置图表大小及标题</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">20</span>,<span class="number">20</span>))</span><br><span class="line">    <span class="comment"># 绘制底图</span></span><br><span class="line">    data_chinai.plot(ax=plt.subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">                      edgecolor=<span class="string">'k'</span>, linewidth = <span class="number">0.5</span>,</span><br><span class="line">                      color = <span class="string">'gray'</span>, alpha = <span class="number">0.1</span>)</span><br><span class="line">    <span class="comment"># 添加气泡图</span></span><br><span class="line">    plt.scatter(data_chinai[<span class="string">'centerlng'</span>],data_chinai[<span class="string">'centerlat'</span>], </span><br><span class="line">                s = data_chinai[tp], edgecolors=<span class="string">'k'</span>, alpha = <span class="number">0.8</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 添加省市信息</span></span><br><span class="line">    lst = data_chinai[[<span class="string">'省市'</span>,<span class="string">'centerlng'</span>,<span class="string">'centerlat'</span>,tp]].to_dict(orient = <span class="string">'record'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">      plt.text(i[<span class="string">'centerlng'</span>], i[<span class="string">'centerlat'</span>], i[<span class="string">'省市'</span>] +<span class="string">':'</span> + str(i[tp]))</span><br><span class="line">    <span class="comment"># 设置标题及网格线</span></span><br><span class="line">    plt.title(<span class="string">'%s 全国%s病例'</span> % (time, tp), fontsize = <span class="number">20</span>)</span><br><span class="line">    plt.grid(<span class="literal">True</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">     </span><br><span class="line"><span class="comment"># 调用函数绘制某日疫情地图</span></span><br><span class="line">create_map1(<span class="string">'2020-1-30'</span>, <span class="string">'疑似'</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<p><img src="https://cdn.erek.top/p040301.jpg" alt="01" title="第一"></p>
<h2 id="二、批量出图"><a href="#二、批量出图" class="headerlink" title="二、批量出图"></a>二、批量出图</h2><p>批量出不同日期的全国疫情地图，需要用到<code>matplotlib</code>的子图功能，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重新创建函数绘制某日疫情地图，用于批量出图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_map2</span><span class="params">(time, tp,x,y,n)</span>:</span></span><br><span class="line">    <span class="comment"># 按照日期筛选数据</span></span><br><span class="line">    datai = df[df[<span class="string">'date'</span>] == time] </span><br><span class="line">    <span class="comment"># 匹配数据</span></span><br><span class="line">    data_chinai = pd.merge(china_spatial, datai, left_on = <span class="string">'name'</span>, right_on = <span class="string">'省市'</span>, how = <span class="string">'left'</span>)</span><br><span class="line">    <span class="keyword">del</span> data_chinai[<span class="string">'name'</span>]  <span class="comment"># 删除多余字段</span></span><br><span class="line">    <span class="comment"># 绘制底图</span></span><br><span class="line">    data_chinai.plot(ax=plt.subplot(x,y,n),</span><br><span class="line">                      edgecolor=<span class="string">'k'</span>, linewidth = <span class="number">0.5</span>,</span><br><span class="line">                      color = <span class="string">'gray'</span>, alpha = <span class="number">0.1</span>)</span><br><span class="line">    <span class="comment"># 添加气泡图</span></span><br><span class="line">    plt.scatter(data_chinai[<span class="string">'centerlng'</span>],data_chinai[<span class="string">'centerlat'</span>], </span><br><span class="line">                s = data_chinai[tp], edgecolors=<span class="string">'k'</span>, alpha = <span class="number">0.8</span>)</span><br><span class="line">    <span class="comment"># 设置标题及网格线</span></span><br><span class="line">    plt.title(<span class="string">'%s 全国%s病例'</span> % (time, tp), fontsize = <span class="number">20</span>)</span><br><span class="line">    plt.grid(<span class="literal">True</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数绘制某日疫情地图，这里我们把图表对象提到函数外来设置</span></span><br><span class="line">plt.figure(figsize = (<span class="number">20</span>,<span class="number">20</span>))</span><br><span class="line">create_map2(<span class="string">'2020-1-30'</span>, <span class="string">'确诊'</span>, <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<p><img src="https://cdn.erek.top/p040302.jpg" alt="02" title="结果"></p>
<hr>
<p><strong>知识点</strong></p>
<ul>
<li>子图的设置逻辑是先创建绘图对象<code>plt.figure()</code>，然后通过每个图表的<code>ax=plt.subplot(x,y,n)</code>来设置图表的位置，所以这里的函数不再有创建绘图对象这一步</li>
<li>由于我们会创建多张图表，地图上的省市信息字体会很小，所以不再做显示</li>
</ul>
<hr>
<p>利用for循环批量出图，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 构建for循环批量出图</span></span><br><span class="line"><span class="comment"># 设置日期列表</span></span><br><span class="line">datelst = [<span class="string">'2020-1-29'</span>,<span class="string">'2020-1-30'</span>,<span class="string">'2020-2-1'</span>,<span class="string">'2020-2-2'</span>,<span class="string">'2020-2-3'</span>,<span class="string">'2020-2-4'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建绘图对象</span></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>,<span class="number">18</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量出图</span></span><br><span class="line">m = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> datelst:</span><br><span class="line">    create_map2(i,<span class="string">'确诊'</span>, <span class="number">3</span>,<span class="number">2</span>,m)</span><br><span class="line">    m += <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<p><img src="https://cdn.erek.top/p040303.jpg" alt="03"></p>
<hr>
<p><strong>知识点</strong></p>
<ul>
<li><code>（x,y)</code>参数会根据你的图表个数来设置，例如6天的数据，所以设置为3行*2列</li>
<li><code>m</code>作为子图的需要，每次for循环中都要递增，m+=1是一般的写法</li>
<li>创建多张图表，字体会很小所有不设置显示</li>
</ul>
<hr>
<p>到这里，关于新冠病毒疫情数据分析的内容就结束了，这十篇文章基本上将基础的分析方法及分析结果都展示出来了。但在数据分析中，也仅仅是基础的内容，更多有趣有深度的方法和结论还需要各位不断的学习和研究，也欢迎大家分享更多有意思的内容，共同进步！</p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
  </entry>
  <entry>
    <title>新冠病毒疫情分析学习09-如何用气泡图做数据地图</title>
    <url>/2020/009-xg/</url>
    <content><![CDATA[<p>本章将在上一章节底图的基础上，添加气泡，实现气泡图</p>
<center>  <!--开始居中对齐-->

<p><img src="https://cdn.erek.top/p040201.jpg" alt="气泡图" title="示意图"></p>
</center> <!--结束居中对齐-->


<a id="more"></a>

<p>首先准备数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> geopandas <span class="keyword">as</span> gpd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment"># 设置不弹出警告</span></span><br><span class="line">df = pd.read_excel(<span class="string">'*/*/data_ncov.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间序列转换</span></span><br><span class="line">df[<span class="string">'date'</span>] = df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)     <span class="comment"># 先将字段转化为字符串</span></span><br><span class="line">df[<span class="string">'date'</span>] = pd.to_datetime(df[<span class="string">'date'</span>])   <span class="comment"># 再进行时间序列转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取2020-2-1日数据</span></span><br><span class="line">data_0201 = df[df[<span class="string">'date'</span>] == <span class="string">'2020-2-1'</span>]</span><br><span class="line">data_0201.head()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取空间数据</span></span><br><span class="line">china_spatial = gpd.GeoDataFrame.from_file(<span class="string">'*/*/chinadata.json'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配数据</span></span><br><span class="line">data_china0201 = pd.merge(china_spatial, data_0201, left_on = <span class="string">'name'</span>, right_on = <span class="string">'省市'</span>, how = <span class="string">'left'</span>)</span><br><span class="line"><span class="keyword">del</span> data_china0201[<span class="string">'name'</span>]  <span class="comment"># 删除多余字段</span></span><br><span class="line">data_china0201.head()</span><br></pre></td></tr></table></figure>

<h2 id="1、在数据地图中绘制气泡图"><a href="#1、在数据地图中绘制气泡图" class="headerlink" title="1、在数据地图中绘制气泡图"></a>1、在数据地图中绘制气泡图</h2><p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在数据地图中绘制气泡图</span></span><br><span class="line"><span class="comment"># 设置图表大小及标题</span></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>,<span class="number">20</span>))</span><br><span class="line">plt.title(<span class="string">'2020-2-1 全国确诊病例'</span>, fontsize = <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制底图</span></span><br><span class="line">data_china0201.plot(ax=plt.subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">                  edgecolor=<span class="string">'k'</span>, linewidth = <span class="number">0.5</span>, color = <span class="string">'gray'</span>, alpha = <span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加气泡图</span></span><br><span class="line">plt.scatter(data_china0201[<span class="string">'centerlng'</span>],data_china0201[<span class="string">'centerlat'</span>], </span><br><span class="line">            s = data_china0201[<span class="string">'确诊'</span>], edgecolors=<span class="string">'k'</span>, alpha = <span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置网格线</span></span><br><span class="line">plt.grid(<span class="literal">True</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加省市信息</span></span><br><span class="line">lst = data_china0201[[<span class="string">'省市'</span>,<span class="string">'centerlng'</span>,<span class="string">'centerlat'</span>,<span class="string">'确诊'</span>]].to_dict(orient = <span class="string">'record'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">    plt.text(i[<span class="string">'centerlng'</span>], i[<span class="string">'centerlat'</span>], i[<span class="string">'省市'</span>] +<span class="string">':'</span> + str(i[<span class="string">'确诊'</span>]))</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<center>  <!--开始居中对齐-->

<p><img src="https://cdn.erek.top/p040201.jpg" alt="气泡图" title="输出结果"></p>
</center> <!--结束居中对齐-->

<hr>
<p><strong>知识点</strong></p>
<ul>
<li><code>matplotlib.pyplot.scatter(x,y,s,..)</code>的参数解释：<ul>
<li><code>x</code>：气泡图x值，这里是省市行政区域中心点坐标-经度</li>
<li><code>y</code>：气泡图y值，这里是省市行政区域中心点坐标-纬度</li>
<li><code>s</code>：设置气泡图大小的字段</li>
</ul>
</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
  </entry>
  <entry>
    <title>新冠病毒疫情分析学习08-绘制第一张数据地图</title>
    <url>/2020/008-xg/</url>
    <content><![CDATA[<p>本章将利用python图表工具包matplotlib以及空间数据处理工具包geopandas绘制数据地图</p>
<p>准备数据：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment"># 设置不弹出警告</span></span><br><span class="line">df = pd.read_excel(<span class="string">'*/*/data_ncov.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间序列转换</span></span><br><span class="line">df[<span class="string">'date'</span>] = df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)     <span class="comment"># 先将字段转化为字符串</span></span><br><span class="line">df[<span class="string">'date'</span>] = pd.to_datetime(df[<span class="string">'date'</span>])   <span class="comment"># 再进行时间序列转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取2020-2-1日数据</span></span><br><span class="line">data_0201 = df[df[<span class="string">'date'</span>] == <span class="string">'2020-2-1'</span>]</span><br><span class="line">data_0201.head()</span><br></pre></td></tr></table></figure>

<h2 id="绘图模块Matplotlib-pyplot-amp-空间数据处理模块Geopandas"><a href="#绘图模块Matplotlib-pyplot-amp-空间数据处理模块Geopandas" class="headerlink" title="绘图模块Matplotlib.pyplot &amp; 空间数据处理模块Geopandas"></a>绘图模块Matplotlib.pyplot &amp; 空间数据处理模块Geopandas</h2><p><strong>Matplotlib介绍</strong><br>Matplotlib是一个 Python 的 2D绘图库，它以各种硬拷贝格式和跨平台的交互式环境生成出版质量级别的图形。通过 <code>matplotlib</code>，开发者可以仅需要几行代码，便可以生成绘图，直方图，功率谱，条形图，错误图，散点图等。</p>
<p>我们本章主要使用的是<code>matplotlib</code>的<code>pyplot</code>模块，导入方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p><strong>Geopandas介绍</strong><br>GeoPandas是一个开源项目，它的目的是使得在Python下更方便的处理地理空间数据。GeoPandas扩展了pandas的数据类型，允许其在几何类型上进行空间操作。</p>
<ul>
<li>几何操作由 shapely执行__</li>
<li>GeoPandas进一步依赖于 fiona进行文件存取和 descartes ，matplotlib 进行绘图。<br>导入方法：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> geopandas <span class="keyword">as</span> gpd</span><br></pre></td></tr></table></figure>

<h2 id="如何读取空间数据？"><a href="#如何读取空间数据？" class="headerlink" title="如何读取空间数据？"></a>如何读取空间数据？</h2><p>之前我们读取xlsx的数据，但不包括地理空间信息，我们用pandas读取以后以<code>pandas.DataFrame</code>来存储的</p>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入geopandas工具包读取空间数据"$&#123;ohstudy&#125;/nCov/chinadata.json"</span></span><br><span class="line"><span class="keyword">import</span> geopandas <span class="keyword">as</span> gpd</span><br><span class="line">china_spatial = gpd.GeoDataFrame.from_file(<span class="string">'*/*/chinadata.json'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据基本情况</span></span><br><span class="line">china_spatial.info()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出数据</span></span><br><span class="line">china_spatial.head()</span><br></pre></td></tr></table></figure>

<p><strong>知识点</strong></p>
<blockquote>
<p>我们通过<code>geopandas.GeoDataFrame.from_file()</code>方法来读取数据，对于空间数据的格式常见的为:</p>
</blockquote>
<blockquote>
<ul>
<li><code>.json</code>，本节课用的就是json格式</li>
<li><code>.shapefile</code>，非常常见的空间数据格式，一般GIS类软件产品较长使用<br>可以看到数据类型为<code>geopandas.geodataframe.GeoDataFrame</code>,并不是<code>pandas</code>读取后的<code>pandas.DataFrame</code>，但由于<code>geopandas</code>结合了<code>pandas</code>和<code>shapely</code>的功能，所以对于表格的处理方法基本和pandas一致。</li>
<li>可以这样理解，<code>GeoDataFrame</code>是向<code>DataFrame</code>增加了地理数据支持的功能<br>我们也能发现新的数据字段类型：<code>geometry</code>，该类型字段代表的是空间信息，比如这里的数据其实是我国省级行政区划的面数据，面数据的空间属性为：<strong>面中每个节点的经纬度坐标构成</strong></li>
</ul>
</blockquote>
<h2 id="用GeoDataFrame绘制一张地图"><a href="#用GeoDataFrame绘制一张地图" class="headerlink" title="用GeoDataFrame绘制一张地图"></a>用GeoDataFrame绘制一张地图</h2><p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制全国地图</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 设置图表大小</span></span><br><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图表标题</span></span><br><span class="line">plt.title(<span class="string">'全国地图'</span>)   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制空间数据</span></span><br><span class="line">china_spatial.plot(ax=plt.subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置网格线</span></span><br><span class="line">plt.grid(<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<img src="/2020/008-xg/01.png" class="" title="图1">

<hr>
<p><strong>知识点</strong></p>
<ul>
<li><p><code>plt.figure()</code>，用于创建1个绘图对象，其中<code>figsize = ()</code>参数用来设置图表大小</p>
</li>
<li><p><code>plt.title()</code>，用于设置图表标题</p>
</li>
<li><p><code>GeoDataFrame.plot()</code>，用于绘制空间图表</p>
<ul>
<li><code>ax = plt.subplot(横向图表数量，纵向图表数量，第几张表)</code>，这个参数使得<code>china_spatial</code>所绘制的图表是在之前创建的绘图对象中，<code>(1,1,1)</code>指该绘图对象的一共只有1张表</li>
</ul>
</li>
<li><p><code>plt.grid()</code>，用于设置网格线，可选参数</p>
</li>
</ul>
<hr>
<h2 id="数据合并，绘制疫情地图"><a href="#数据合并，绘制疫情地图" class="headerlink" title="数据合并，绘制疫情地图"></a>数据合并，绘制疫情地图</h2><blockquote>
<p>现有的空间数据<code>china_spatial</code>只有空间属性并没有疫情相关数据，我们现在需要将<code>data_0201</code>中疫情相关字段匹配进<code>china_spatial</code>中，这里需要用<code>pandas.merge()</code>来操作</p>
</blockquote>
<blockquote>
<ul>
<li>pandas中的数据匹配是用<code>pandas.merge()</code>，类似于Excel中的<code>Vlookup</code>函数、SQL中的<code>JOIN</code>语句</li>
</ul>
</blockquote>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 匹配数据</span></span><br><span class="line">data_china0201 = pd.merge(china_spatial, data_0201, left_on = <span class="string">'name'</span>, right_on = <span class="string">'省市'</span>, how = <span class="string">'left'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除多余字段</span></span><br><span class="line"><span class="keyword">del</span> data_china0201[<span class="string">'name'</span>]</span><br><span class="line">data_china0201.head()</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">centerlng</th>
<th align="center">centerlat</th>
<th align="center">geometry</th>
<th align="center">区域编码</th>
<th align="center">省市</th>
<th align="center">疑似</th>
<th align="center">确诊</th>
<th align="center">死亡</th>
<th align="center">date</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">117.226</td>
<td align="center">31.8257</td>
<td align="center">POLYGON ((119.62594 31.13353, 119.64401 31.114…</td>
<td align="center">340000</td>
<td align="center">安徽省</td>
<td align="center">160</td>
<td align="center">340</td>
<td align="center">0</td>
<td align="center">2020-02-01</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">116.412</td>
<td align="center">40.1844</td>
<td align="center">POLYGON ((117.38359 40.22566, 117.37170 40.216…</td>
<td align="center">110000</td>
<td align="center">北京市</td>
<td align="center">0</td>
<td align="center">183</td>
<td align="center">1</td>
<td align="center">2020-02-01</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">117.981</td>
<td align="center">26.0783</td>
<td align="center">MULTIPOLYGON (((118.25399 24.44654, 118.27072 …</td>
<td align="center">350000</td>
<td align="center">福建省</td>
<td align="center">99</td>
<td align="center">159</td>
<td align="center">0</td>
<td align="center">2020-02-01</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">100.612</td>
<td align="center">37.8776</td>
<td align="center">POLYGON ((104.29087 37.43066, 104.30275 37.415…</td>
<td align="center">620000</td>
<td align="center">甘肃省</td>
<td align="center">20</td>
<td align="center">40</td>
<td align="center">0</td>
<td align="center">2020-02-01</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">108.789</td>
<td align="center">23.8206</td>
<td align="center">MULTIPOLYGON (((107.15419 21.75961, 107.15774 …</td>
<td align="center">450000</td>
<td align="center">广西壮族自治区</td>
<td align="center">319</td>
<td align="center">111</td>
<td align="center">0</td>
<td align="center">2020-02-01</td>
</tr>
</tbody></table>
<hr>
<p><strong>知识点</strong></p>
<ul>
<li><code>pandas.merge(left, right, how = ,on = ,left_on = ,right_on = )</code>的参数解释：<br> +<code>left</code>：第一个DataFrame<ul>
<li><code>right</code>：第二个DataFrame</li>
<li><code>how</code>：合并方式<ul>
<li><code>inner</code>：默认，取交集</li>
<li><code>outer</code>：取并集，数据缺失范围NaN</li>
<li><code>left</code>：按照left数据为参考合并，数据缺失范围NaN</li>
<li><code>right</code>：按照right数据为参考合并，数据缺失范围NaN</li>
</ul>
</li>
<li><code>on</code>：参考键</li>
<li><code>left_o</code>：当键不为一个列时，单独设置左键</li>
<li><code>right_on</code>：当键不为一个列时，单独设置右键</li>
</ul>
</li>
<li>我们可以看到<code>china_spatial</code>数据的<code>name</code>字段与<code>data_0201</code>数据中<code>省市</code>字段是可以用来匹配的</li>
</ul>
<hr>
<p>合并数据后，我们可以用确诊字段来绘制疫情地图，如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制疫情地图</span></span><br><span class="line"><span class="comment"># 设置图表大小及标题</span></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>,<span class="number">20</span>))</span><br><span class="line">plt.title(<span class="string">'2020-2-1 全国确诊病例'</span>, fontsize = <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制疫情地图</span></span><br><span class="line">data_china0201.plot(ax=plt.subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>), alpha=<span class="number">1</span>,edgecolor=<span class="string">'k'</span>, linewidth = <span class="number">0.5</span>,</span><br><span class="line">                  legend=<span class="literal">True</span>, scheme = <span class="string">'FisherJenks'</span>, column=<span class="string">'确诊'</span>, cmap = <span class="string">'Reds'</span>)</span><br><span class="line"><span class="comment"># 设置网格线</span></span><br><span class="line">plt.grid(<span class="literal">True</span>,alpha=<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<img src="/2020/008-xg/02.png" class="" title="图2">

<hr>
<p><strong>知识点</strong></p>
<ul>
<li><code>GeoDataFrame.plot()</code>的参数解释：</li>
<li><code>edgecolor</code>/<code>linewidth</code>/<code>alpha</code>：设置面数据描边颜色、宽度及透明度<ul>
<li><code>cmap</code>：设置色系，可选参数：Reds/Reds_r/Blues/Blues_r/…</li>
<li><code>legend</code>：是否显示图例</li>
<li><code>scheme = &#39;FisherJenks&#39;</code>：分类方法，者利用了Jenks自然间断点方法，可以更好地将数据分为多个类，且能使得各类之间差异最大化</li>
</ul>
</li>
</ul>
<hr>
<h2 id="数据地图加工，设置文字信息"><a href="#数据地图加工，设置文字信息" class="headerlink" title="数据地图加工，设置文字信息"></a>数据地图加工，设置文字信息</h2><p>我们还需要 在地图上增加每个省市的名称，如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制疫情地图并添加省市信息</span></span><br><span class="line"><span class="comment"># 设置图表大小及标题</span></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>,<span class="number">20</span>))</span><br><span class="line">plt.title(<span class="string">'2020-2-1 全国确诊病例'</span>, fontsize = <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制疫情地图</span></span><br><span class="line">data_china0201.plot(ax=plt.subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>), alpha=<span class="number">1</span>,edgecolor=<span class="string">'k'</span>, linewidth = <span class="number">0.5</span>,</span><br><span class="line">                  legend=<span class="literal">True</span>, scheme = <span class="string">'FisherJenks'</span>, column=<span class="string">'确诊'</span>, cmap = <span class="string">'Reds'</span>)</span><br><span class="line"><span class="comment"># 设置网格线</span></span><br><span class="line">plt.grid(<span class="literal">True</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加省市信息</span></span><br><span class="line">lst = data_china0201[[<span class="string">'省市'</span>,<span class="string">'centerlng'</span>,<span class="string">'centerlat'</span>,<span class="string">'确诊'</span>]].to_dict(orient = <span class="string">'record'</span>)</span><br><span class="line">print(lst[:<span class="number">5</span>])   <span class="comment"># 查看输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> lst:</span><br><span class="line">    plt.text(i[<span class="string">'centerlng'</span>], i[<span class="string">'centerlat'</span>], i[<span class="string">'省市'</span>] +<span class="string">':'</span> + str(i[<span class="string">'确诊'</span>]))</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<img src="/2020/008-xg/03.png" class="" title="图3">

<hr>
<p><strong>知识点</strong></p>
<ul>
<li><code>matplotlib.pyplot.text(x,y,value)</code>的参数解释：<ul>
<li>x：文字x值，这里是省市行政区域中心点坐标 - 经度</li>
<li>y：文字y值，这里是省市行政区域中心点坐标 - 纬度</li>
<li>value：文字内容，这里显示”省市名称” + “确诊病例数量”</li>
</ul>
</li>
</ul>
<hr>
<p>快来试一下吧！</p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
  </entry>
  <entry>
    <title>新冠病毒疫情分析学习07-全国疫情动态变化可视化表达</title>
    <url>/2020/007-xg/</url>
    <content><![CDATA[<p>本章将基于不同日期的各省市疫情数据，用pyecharts做动态可视化图表</p>
<p>首先准备好数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment"># 设置不弹出警告</span></span><br><span class="line">df = pd.read_excel(<span class="string">'*/*/data_ncov.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间序列转换</span></span><br><span class="line">df[<span class="string">'date'</span>] = df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)     <span class="comment"># 先将字段转化为字符串</span></span><br><span class="line">df[<span class="string">'date'</span>] = pd.to_datetime(df[<span class="string">'date'</span>])   <span class="comment"># 再进行时间序列转换</span></span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>

<h2 id="重新构建函数提取数据"><a href="#重新构建函数提取数据" class="headerlink" title="重新构建函数提取数据"></a>重新构建函数提取数据</h2><p>上一章，已经通过构建函数<code>regiondata(where)</code>用于提取数据，此章节新增一个参数time用来提取某日某地区的疫情数据，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 构建函数提取数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">regiondata_time</span><span class="params">(where, time)</span>:</span></span><br><span class="line">    datai = df[df[<span class="string">'省市'</span>] == where]</span><br><span class="line">    <span class="comment"># 分别计算新增数据</span></span><br><span class="line">    datai[<span class="string">'疑似新增'</span>] = datai[<span class="string">'疑似'</span>] - datai[<span class="string">'疑似'</span>].shift()</span><br><span class="line">    datai[<span class="string">'确诊新增'</span>] = datai[<span class="string">'确诊'</span>] - datai[<span class="string">'确诊'</span>].shift()</span><br><span class="line">    datai[<span class="string">'死亡新增'</span>] = datai[<span class="string">'死亡'</span>] - datai[<span class="string">'死亡'</span>].shift()</span><br><span class="line">	  <span class="comment"># 返回某日数据</span></span><br><span class="line">    <span class="keyword">return</span> datai[datai[<span class="string">'date'</span>] == time]</span><br><span class="line"></span><br><span class="line">regiondata_time(<span class="string">'浙江省'</span>, <span class="string">'2020-2-1'</span>)</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<p>输出结果如下：</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">区域编码</th>
<th align="center">省市</th>
<th align="center">疑似</th>
<th align="center">确诊</th>
<th align="center">死亡</th>
<th align="center">date</th>
<th align="center">疑似新增</th>
<th align="center">确诊新增</th>
<th align="center">死亡新增</th>
</tr>
</thead>
<tbody><tr>
<td align="center">26</td>
<td align="center">330000</td>
<td align="center">浙江省</td>
<td align="center">207</td>
<td align="center">661</td>
<td align="center">0</td>
<td align="center">2020-02-01</td>
<td align="center">5.0</td>
<td align="center">62.0</td>
<td align="center">0.0</td>
</tr>
</tbody></table>
<h2 id="绘制气泡图来描绘不同省市的疫情状况"><a href="#绘制气泡图来描绘不同省市的疫情状况" class="headerlink" title="绘制气泡图来描绘不同省市的疫情状况"></a>绘制气泡图来描绘不同省市的疫情状况</h2><p>首先线试试用3个省市来绘制气泡图，包括了3个维度的内容：</p>
<ul>
<li>x轴 → 当日确诊病例新增</li>
<li>y轴 → 当日疑似病例新增</li>
<li>点的大小 → 当日确证病例数量</li>
</ul>
<p>注：当只有2个维度信息时是散点图（x和y），有3个维度信息时是气泡图(x、y、点的大小)</p>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 提取3个省市的数据</span></span><br><span class="line">data_zj = regiondata_time(<span class="string">'浙江省'</span>, <span class="string">'2020-2-1'</span>)</span><br><span class="line">data_gd = regiondata_time(<span class="string">'广东省'</span>, <span class="string">'2020-2-1'</span>)</span><br><span class="line">data_hn = regiondata_time(<span class="string">'湖南省'</span>, <span class="string">'2020-2-1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制多气泡图(散点图)</span></span><br><span class="line"><span class="keyword">import</span> pyecharts <span class="keyword">as</span> pe</span><br><span class="line">scatter = pe.EffectScatter(<span class="string">"2020-2-1 疫情情况"</span>, width = <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加浙江省数据</span></span><br><span class="line">scatter.add(<span class="string">"浙江省"</span>,[data_zj[<span class="string">'确诊新增'</span>]], [data_zj[<span class="string">'疑似新增'</span>]], symbol_size = data_zj[<span class="string">'确诊'</span>].iloc[<span class="number">0</span>]/<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加其他数据及设置图表参数</span></span><br><span class="line">scatter.add(<span class="string">"广东省"</span>, [data_gd[<span class="string">'确诊新增'</span>]], [data_gd[<span class="string">'疑似新增'</span>]], symbol_size = data_gd[<span class="string">'确诊'</span>].iloc[<span class="number">0</span>]/<span class="number">30</span>)</span><br><span class="line">scatter.add(<span class="string">"湖南省"</span>, [data_hn[<span class="string">'确诊新增'</span>]], [data_hn[<span class="string">'疑似新增'</span>]], symbol_size = data_hn[<span class="string">'确诊'</span>].iloc[<span class="number">0</span>]/<span class="number">30</span>,</span><br><span class="line">            xaxis_name=<span class="string">'确诊病例新增'</span>,xaxis_name_pos = <span class="string">'end'</span>,</span><br><span class="line">            yaxis_name =<span class="string">'疑似病例新增'</span>,yaxis_name_gap=<span class="number">40</span>,</span><br><span class="line">            is_toolbox_show = <span class="literal">False</span>,</span><br><span class="line">            tooltip_axispointer_type = <span class="string">'cross'</span>,</span><br><span class="line">            legend_pos=<span class="string">'20%'</span>)</span><br><span class="line"></span><br><span class="line">scatter</span><br></pre></td></tr></table></figure>

<p>结果如下：</p>
<div id="echarts8363" style="width: 100%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts8363'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "2020-2-1 \u75ab\u60c5\u60c5\u51b5",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "series_id": 4436271,
    "tooltip": {
        "trigger": "item",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "cross"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "effectScatter",
            "name": "\u6d59\u6c5f\u7701",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 22.033333333333335,
            "data": [
                [
                    [
                        62.0
                    ],
                    [
                        5.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 4436271
        },
        {
            "type": "effectScatter",
            "name": "\u5e7f\u4e1c\u7701",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 20.133333333333333,
            "data": [
                [
                    [
                        84.0
                    ],
                    [
                        31.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 4436271
        },
        {
            "type": "effectScatter",
            "name": "\u6e56\u5357\u7701",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 15.433333333333334,
            "data": [
                [
                    [
                        74.0
                    ],
                    [
                        8.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 4436271
        }
    ],
    "legend": [
        {
            "data": [
                "\u6d59\u6c5f\u7701",
                "\u5e7f\u4e1c\u7701",
                "\u6e56\u5357\u7701"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "20%",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "name": "\u786e\u8bca\u75c5\u4f8b\u65b0\u589e",
            "show": true,
            "nameLocation": "end",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "yAxis": [
        {
            "name": "\u7591\u4f3c\u75c5\u4f8b\u65b0\u589e",
            "show": true,
            "nameLocation": "middle",
            "nameGap": 40,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>

<hr>
<p><strong>知识点</strong></p>
<blockquote>
<p><code>pe.EffectScatter()</code>的参数解释：</p>
<blockquote>
<ul>
<li><code>[data_zj[&#39;确诊新增&#39;]]</code>、 <code>[data_zj[&#39;疑似新增&#39;]]</code>，这里分别设置了散点图的x和y，由于本关比较特殊，在后续做动态气泡图时需保留每个省市的图例颜色，需要单点添加图表，且这里需要设置可迭代对象(列表)，所以会有一个[]来囊括内部数据<code>data_zj[&#39;确诊新增&#39;]</code>/<code>data_zj[&#39;疑似新增&#39;]</code></li>
<li><code>symbol_size</code>参数用来设置点的大小，这里为了让点不至于太大，所以用确诊病例数量除以了30</li>
<li><code>xaxis_name=&#39;确诊病例&#39;</code>，设置x轴标签</li>
<li><code>xaxis_name_pos = &#39;end&#39;</code>，设置x轴名称位置，有’start’，’middle’，’end’可选</li>
<li><code>yaxis_name =&#39;疑似病例&#39;</code>，设置y轴标签</li>
<li><code>yaxis_name_gap=40</code>，设置y轴名称与轴线之间的距离</li>
<li><code>is_toolbox_show = False</code>，设置是否显示工具栏，这里不用显示</li>
<li><code>legend_pos=&#39;20%&#39;</code>，设置图例位置，有’left’, ‘center’, ‘right’可选，也可以为百分数，如”60%”</li>
</ul>
</blockquote>
</blockquote>
<hr>
<h2 id="用for循环快速出图"><a href="#用for循环快速出图" class="headerlink" title="用for循环快速出图"></a>用for循环快速出图</h2><blockquote>
<p>梳理一下流程</p>
<blockquote>
<ul>
<li>创建气泡图图表对象</li>
<li>调用<code>regiondata_time()</code>提取某省市数据</li>
<li>在气泡图中添加点</li>
</ul>
</blockquote>
</blockquote>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用for循环出气泡图</span></span><br><span class="line"><span class="comment"># 创建省市列表</span></span><br><span class="line">regions = [<span class="string">'浙江省'</span>,<span class="string">'广东省'</span>,<span class="string">'湖南省'</span>,<span class="string">'上海市'</span>,<span class="string">'重庆市'</span>,<span class="string">'四川省'</span>,<span class="string">'河南省'</span>,<span class="string">'江苏省'</span>]</span><br><span class="line">scatter = pe.EffectScatter(<span class="string">"2020-2-1 疫情情况"</span>, width = <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># for循环</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> regions:</span><br><span class="line">    <span class="comment"># 提取数据</span></span><br><span class="line">    datai = regiondata_time(i, <span class="string">'2020-2-1'</span>)   </span><br><span class="line">    <span class="comment"># 设置参数</span></span><br><span class="line">    scatter.add(i,[datai[<span class="string">'确诊新增'</span>]], [datai[<span class="string">'疑似新增'</span>]], symbol_size = datai[<span class="string">'确诊'</span>].iloc[<span class="number">0</span>]/<span class="number">30</span>,</span><br><span class="line">                xaxis_name=<span class="string">'确诊病例新增'</span>,xaxis_name_pos = <span class="string">'end'</span>,</span><br><span class="line">                yaxis_name =<span class="string">'疑似病例新增'</span>,yaxis_name_gap=<span class="number">40</span>,</span><br><span class="line">                is_toolbox_show = <span class="literal">False</span>,</span><br><span class="line">                tooltip_axispointer_type = <span class="string">'cross'</span>,</span><br><span class="line">                legend_pos=<span class="string">'20%'</span>)</span><br><span class="line">scatter</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<div id="echarts4" style="width: 100%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts4'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "2020-2-1 \u75ab\u60c5\u60c5\u51b5",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "series_id": 8193259,
    "tooltip": {
        "trigger": "item",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "cross"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "effectScatter",
            "name": "\u6d59\u6c5f\u7701",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 22.033333333333335,
            "data": [
                [
                    [
                        62.0
                    ],
                    [
                        5.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 8193259
        },
        {
            "type": "effectScatter",
            "name": "\u5e7f\u4e1c\u7701",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 20.133333333333333,
            "data": [
                [
                    [
                        84.0
                    ],
                    [
                        31.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 8193259
        },
        {
            "type": "effectScatter",
            "name": "\u6e56\u5357\u7701",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 15.433333333333334,
            "data": [
                [
                    [
                        74.0
                    ],
                    [
                        8.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 8193259
        },
        {
            "type": "effectScatter",
            "name": "\u4e0a\u6d77\u5e02",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 5.9,
            "data": [
                [
                    [
                        24.0
                    ],
                    [
                        1.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 8193259
        },
        {
            "type": "effectScatter",
            "name": "\u91cd\u5e86\u5e02",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 8.733333333333333,
            "data": [
                [
                    [
                        24.0
                    ],
                    [
                        17.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 8193259
        },
        {
            "type": "effectScatter",
            "name": "\u56db\u5ddd\u7701",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 7.7,
            "data": [
                [
                    [
                        24.0
                    ],
                    [
                        -9.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 8193259
        },
        {
            "type": "effectScatter",
            "name": "\u6cb3\u5357\u7701",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 16.433333333333334,
            "data": [
                [
                    [
                        71.0
                    ],
                    [
                        3.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 8193259
        },
        {
            "type": "effectScatter",
            "name": "\u6c5f\u82cf\u7701",
            "showEffectOn": "render",
            "rippleEffect": {
                "brushType": "stroke",
                "scale": 2.5,
                "period": 4
            },
            "symbol": "circle",
            "symbolSize": 7.866666666666666,
            "data": [
                [
                    [
                        34.0
                    ],
                    [
                        5.0
                    ]
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "seriesId": 8193259
        }
    ],
    "legend": [
        {
            "data": [
                "\u6d59\u6c5f\u7701",
                "\u5e7f\u4e1c\u7701",
                "\u6e56\u5357\u7701",
                "\u4e0a\u6d77\u5e02",
                "\u91cd\u5e86\u5e02",
                "\u56db\u5ddd\u7701",
                "\u6cb3\u5357\u7701",
                "\u6c5f\u82cf\u7701"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "20%",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "name": "\u786e\u8bca\u75c5\u4f8b\u65b0\u589e",
            "show": true,
            "nameLocation": "end",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "yAxis": [
        {
            "name": "\u7591\u4f3c\u75c5\u4f8b\u65b0\u589e",
            "show": true,
            "nameLocation": "middle",
            "nameGap": 40,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>

<hr>
<p><strong>知识点</strong><br><code>regions = [&#39;浙江省&#39;,...]</code>，这里为了方便后续for循环做迭代，需要创建1个可迭代对象 —— 列表，用它来存储所需要绘制的省市</p>
<hr>
<h2 id="如何设置时间轴做动态气泡图"><a href="#如何设置时间轴做动态气泡图" class="headerlink" title="如何设置时间轴做动态气泡图"></a>如何设置时间轴做动态气泡图</h2><p>再多添加一个维度-时间维度，需要增加一个时间轴，操作需要分为两步：</p>
<blockquote>
<ul>
<li>第一步：构建函数直接绘制单日疫情情况气泡图<blockquote>
<ul>
<li>参数1：省市列表</li>
<li>参数2：日期</li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>第二步：添加时间轴<code>timeline</code>，做动态气泡图表达<blockquote>
<ul>
<li>创建时间轴timeline</li>
<li>用for循环依次添加已创建的单日疫情情况气泡图</li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
<p>先构建第一步函数，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 构建函数直接绘制单日疫情情况气泡图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fig3</span><span class="params">(regionlst, time)</span>:</span></span><br><span class="line">    <span class="comment"># 创建气泡图对象</span></span><br><span class="line">    scatteri = pe.EffectScatter(<span class="string">"%s 疫情情况"</span> % time, width = <span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> regionlst:</span><br><span class="line">        <span class="comment"># 提取数据</span></span><br><span class="line">        datai = regiondata_time(i, time)   </span><br><span class="line">        <span class="comment"># 设置参数</span></span><br><span class="line">        scatteri.add(i,[datai[<span class="string">'确诊新增'</span>]], [datai[<span class="string">'疑似新增'</span>]], symbol_size = datai[<span class="string">'确诊'</span>].iloc[<span class="number">0</span>]/<span class="number">30</span>,</span><br><span class="line">                    xaxis_name=<span class="string">'确诊病例新增'</span>,xaxis_name_pos = <span class="string">'end'</span>,</span><br><span class="line">                    yaxis_name =<span class="string">'疑似病例新增'</span>,yaxis_name_gap=<span class="number">40</span>,</span><br><span class="line">                    is_toolbox_show = <span class="literal">False</span>,</span><br><span class="line">                    tooltip_axispointer_type = <span class="string">'cross'</span>,</span><br><span class="line">                    legend_pos=<span class="string">'20%'</span>)</span><br><span class="line">    <span class="keyword">return</span> scatteri</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 调用函数绘制单日疫情情况气泡图</span></span><br><span class="line">regions = [<span class="string">'浙江省'</span>,<span class="string">'广东省'</span>,<span class="string">'湖南省'</span>,<span class="string">'上海市'</span>,<span class="string">'重庆市'</span>,<span class="string">'四川省'</span>,<span class="string">'河南省'</span>,<span class="string">'江苏省'</span>]</span><br><span class="line">fig3(regions, <span class="string">'2020-1-30'</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果如下:</p>
<div id="echarts3532" style="width: 100%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts3532'));

        // 指定图表的配置项和数据
        var option = {
    "baseOption": {
        "timeline": {
            "axisType": "category",
            "autoPlay": false,
            "loop": true,
            "rewind": false,
            "show": true,
            "symbol": "emptyCircle",
            "symbolSize": 10,
            "playInterval": 2000,
            "left": "auto",
            "right": "auto",
            "top": "auto",
            "bottom": "0%",
            "data": [
                "2020-02-07",
                "2020-02-08",
                "2020-02-09",
                "2020-02-10",
                "2020-02-11",
                "2020-02-12",
                "2020-02-13"
            ]
        },
        "series": [],
        "xAxis": [
            {
                "name": "\u786e\u8bca\u75c5\u4f8b\u65b0\u589e",
                "show": true,
                "nameLocation": "end",
                "nameGap": 25,
                "nameTextStyle": {
                    "fontSize": 14
                },
                "axisTick": {
                    "alignWithLabel": false
                },
                "inverse": false,
                "boundaryGap": true,
                "type": "value",
                "splitLine": {
                    "show": true
                },
                "axisLine": {
                    "lineStyle": {
                        "width": 1
                    }
                },
                "axisLabel": {
                    "interval": "auto",
                    "rotate": 0,
                    "margin": 8,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            }
        ],
        "yAxis": [
            {
                "name": "\u7591\u4f3c\u75c5\u4f8b\u65b0\u589e",
                "show": true,
                "nameLocation": "middle",
                "nameGap": 40,
                "nameTextStyle": {
                    "fontSize": 14
                },
                "axisTick": {
                    "alignWithLabel": false
                },
                "inverse": false,
                "boundaryGap": true,
                "type": "value",
                "splitLine": {
                    "show": true
                },
                "axisLine": {
                    "lineStyle": {
                        "width": 1
                    }
                },
                "axisLabel": {
                    "interval": "auto",
                    "formatter": "{value} ",
                    "rotate": 0,
                    "margin": 8,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            }
        ]
    },
    "options": [
        {
            "color": [
                "#c23531",
                "#2f4554",
                "#61a0a8",
                "#d48265",
                "#749f83",
                "#ca8622",
                "#bda29a",
                "#6e7074",
                "#546570",
                "#c4ccd3",
                "#f05b72",
                "#ef5b9c",
                "#f47920",
                "#905a3d",
                "#fab27b",
                "#2a5caa",
                "#444693",
                "#726930",
                "#b2d235",
                "#6d8346",
                "#ac6767",
                "#1d953f",
                "#6950a1",
                "#918597",
                "#f6f5ec"
            ],
            "legend": [
                {
                    "data": [
                        "\u6d59\u6c5f\u7701",
                        "\u5e7f\u4e1c\u7701",
                        "\u6e56\u5357\u7701",
                        "\u4e0a\u6d77\u5e02",
                        "\u91cd\u5e86\u5e02",
                        "\u56db\u5ddd\u7701",
                        "\u6cb3\u5357\u7701",
                        "\u6c5f\u82cf\u7701"
                    ],
                    "selectedMode": "multiple",
                    "show": true,
                    "left": "20%",
                    "top": "top",
                    "orient": "horizontal",
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "series": [
                {
                    "type": "effectScatter",
                    "name": "\u6d59\u6c5f\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 34.93333333333333,
                    "data": [
                        [
                            [
                                42.0
                            ],
                            [
                                -77.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7229063
                },
                {
                    "type": "effectScatter",
                    "name": "\u5e7f\u4e1c\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 35.833333333333336,
                    "data": [
                        [
                            [
                                57.0
                            ],
                            [
                                25.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7229063
                },
                {
                    "type": "effectScatter",
                    "name": "\u6e56\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 26.766666666666666,
                    "data": [
                        [
                            [
                                31.0
                            ],
                            [
                                -29.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7229063
                },
                {
                    "type": "effectScatter",
                    "name": "\u4e0a\u6d77\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 9.366666666666667,
                    "data": [
                        [
                            [
                                12.0
                            ],
                            [
                                15.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7229063
                },
                {
                    "type": "effectScatter",
                    "name": "\u91cd\u5e86\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 14.2,
                    "data": [
                        [
                            [
                                15.0
                            ],
                            [
                                -16.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7229063
                },
                {
                    "type": "effectScatter",
                    "name": "\u56db\u5ddd\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 12.1,
                    "data": [
                        [
                            [
                                19.0
                            ],
                            [
                                23.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7229063
                },
                {
                    "type": "effectScatter",
                    "name": "\u6cb3\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 32.7,
                    "data": [
                        [
                            [
                                67.0
                            ],
                            [
                                -3.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7229063
                },
                {
                    "type": "effectScatter",
                    "name": "\u6c5f\u82cf\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 14.633333333333333,
                    "data": [
                        [
                            [
                                31.0
                            ],
                            [
                                9.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7229063
                }
            ],
            "title": [
                {
                    "text": "2020-02-07 \u75ab\u60c5\u60c5\u51b5",
                    "left": "auto",
                    "top": "auto",
                    "textStyle": {
                        "fontSize": 18
                    },
                    "subtextStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "tooltip": {
                "trigger": "item",
                "triggerOn": "mousemove|click",
                "axisPointer": {
                    "type": "cross"
                },
                "textStyle": {
                    "fontSize": 14
                },
                "backgroundColor": "rgba(50,50,50,0.7)",
                "borderColor": "#333",
                "borderWidth": 0
            }
        },
        {
            "color": [
                "#c23531",
                "#2f4554",
                "#61a0a8",
                "#d48265",
                "#749f83",
                "#ca8622",
                "#bda29a",
                "#6e7074",
                "#546570",
                "#c4ccd3",
                "#f05b72",
                "#ef5b9c",
                "#f47920",
                "#905a3d",
                "#fab27b",
                "#2a5caa",
                "#444693",
                "#726930",
                "#b2d235",
                "#6d8346",
                "#ac6767",
                "#1d953f",
                "#6950a1",
                "#918597",
                "#f6f5ec"
            ],
            "legend": [
                {
                    "data": [
                        "\u6d59\u6c5f\u7701",
                        "\u5e7f\u4e1c\u7701",
                        "\u6e56\u5357\u7701",
                        "\u4e0a\u6d77\u5e02",
                        "\u91cd\u5e86\u5e02",
                        "\u56db\u5ddd\u7701",
                        "\u6cb3\u5357\u7701",
                        "\u6c5f\u82cf\u7701"
                    ],
                    "selectedMode": "multiple",
                    "show": true,
                    "left": "20%",
                    "top": "top",
                    "orient": "horizontal",
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "series": [
                {
                    "type": "effectScatter",
                    "name": "\u6d59\u6c5f\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 35.833333333333336,
                    "data": [
                        [
                            [
                                27.0
                            ],
                            [
                                0.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 326816
                },
                {
                    "type": "effectScatter",
                    "name": "\u5e7f\u4e1c\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 37.333333333333336,
                    "data": [
                        [
                            [
                                45.0
                            ],
                            [
                                13.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 326816
                },
                {
                    "type": "effectScatter",
                    "name": "\u6e56\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 27.933333333333334,
                    "data": [
                        [
                            [
                                35.0
                            ],
                            [
                                1.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 326816
                },
                {
                    "type": "effectScatter",
                    "name": "\u4e0a\u6d77\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 9.733333333333333,
                    "data": [
                        [
                            [
                                11.0
                            ],
                            [
                                24.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 326816
                },
                {
                    "type": "effectScatter",
                    "name": "\u91cd\u5e86\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 14.866666666666667,
                    "data": [
                        [
                            [
                                20.0
                            ],
                            [
                                17.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 326816
                },
                {
                    "type": "effectScatter",
                    "name": "\u56db\u5ddd\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 12.866666666666667,
                    "data": [
                        [
                            [
                                23.0
                            ],
                            [
                                -1.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 326816
                },
                {
                    "type": "effectScatter",
                    "name": "\u6cb3\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 34.43333333333333,
                    "data": [
                        [
                            [
                                52.0
                            ],
                            [
                                -51.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 326816
                },
                {
                    "type": "effectScatter",
                    "name": "\u6c5f\u82cf\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 15.6,
                    "data": [
                        [
                            [
                                29.0
                            ],
                            [
                                -1.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 326816
                }
            ],
            "title": [
                {
                    "text": "2020-02-08 \u75ab\u60c5\u60c5\u51b5",
                    "left": "auto",
                    "top": "auto",
                    "textStyle": {
                        "fontSize": 18
                    },
                    "subtextStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "tooltip": {
                "trigger": "item",
                "triggerOn": "mousemove|click",
                "axisPointer": {
                    "type": "cross"
                },
                "textStyle": {
                    "fontSize": 14
                },
                "backgroundColor": "rgba(50,50,50,0.7)",
                "borderColor": "#333",
                "borderWidth": 0
            }
        },
        {
            "color": [
                "#c23531",
                "#2f4554",
                "#61a0a8",
                "#d48265",
                "#749f83",
                "#ca8622",
                "#bda29a",
                "#6e7074",
                "#546570",
                "#c4ccd3",
                "#f05b72",
                "#ef5b9c",
                "#f47920",
                "#905a3d",
                "#fab27b",
                "#2a5caa",
                "#444693",
                "#726930",
                "#b2d235",
                "#6d8346",
                "#ac6767",
                "#1d953f",
                "#6950a1",
                "#918597",
                "#f6f5ec"
            ],
            "legend": [
                {
                    "data": [
                        "\u6d59\u6c5f\u7701",
                        "\u5e7f\u4e1c\u7701",
                        "\u6e56\u5357\u7701",
                        "\u4e0a\u6d77\u5e02",
                        "\u91cd\u5e86\u5e02",
                        "\u56db\u5ddd\u7701",
                        "\u6cb3\u5357\u7701",
                        "\u6c5f\u82cf\u7701"
                    ],
                    "selectedMode": "multiple",
                    "show": true,
                    "left": "20%",
                    "top": "top",
                    "orient": "horizontal",
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "series": [
                {
                    "type": "effectScatter",
                    "name": "\u6d59\u6c5f\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 36.8,
                    "data": [
                        [
                            [
                                29.0
                            ],
                            [
                                -11.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1902502
                },
                {
                    "type": "effectScatter",
                    "name": "\u5e7f\u4e1c\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 38.36666666666667,
                    "data": [
                        [
                            [
                                31.0
                            ],
                            [
                                -39.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1902502
                },
                {
                    "type": "effectScatter",
                    "name": "\u6e56\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 29.3,
                    "data": [
                        [
                            [
                                41.0
                            ],
                            [
                                -21.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1902502
                },
                {
                    "type": "effectScatter",
                    "name": "\u4e0a\u6d77\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 9.833333333333334,
                    "data": [
                        [
                            [
                                3.0
                            ],
                            [
                                18.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1902502
                },
                {
                    "type": "effectScatter",
                    "name": "\u91cd\u5e86\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 15.6,
                    "data": [
                        [
                            [
                                22.0
                            ],
                            [
                                9.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1902502
                },
                {
                    "type": "effectScatter",
                    "name": "\u56db\u5ddd\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 13.5,
                    "data": [
                        [
                            [
                                19.0
                            ],
                            [
                                30.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1902502
                },
                {
                    "type": "effectScatter",
                    "name": "\u6cb3\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 35.766666666666666,
                    "data": [
                        [
                            [
                                40.0
                            ],
                            [
                                -12.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1902502
                },
                {
                    "type": "effectScatter",
                    "name": "\u6c5f\u82cf\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 16.4,
                    "data": [
                        [
                            [
                                24.0
                            ],
                            [
                                0.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1902502
                }
            ],
            "title": [
                {
                    "text": "2020-02-09 \u75ab\u60c5\u60c5\u51b5",
                    "left": "auto",
                    "top": "auto",
                    "textStyle": {
                        "fontSize": 18
                    },
                    "subtextStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "tooltip": {
                "trigger": "item",
                "triggerOn": "mousemove|click",
                "axisPointer": {
                    "type": "cross"
                },
                "textStyle": {
                    "fontSize": 14
                },
                "backgroundColor": "rgba(50,50,50,0.7)",
                "borderColor": "#333",
                "borderWidth": 0
            }
        },
        {
            "color": [
                "#c23531",
                "#2f4554",
                "#61a0a8",
                "#d48265",
                "#749f83",
                "#ca8622",
                "#bda29a",
                "#6e7074",
                "#546570",
                "#c4ccd3",
                "#f05b72",
                "#ef5b9c",
                "#f47920",
                "#905a3d",
                "#fab27b",
                "#2a5caa",
                "#444693",
                "#726930",
                "#b2d235",
                "#6d8346",
                "#ac6767",
                "#1d953f",
                "#6950a1",
                "#918597",
                "#f6f5ec"
            ],
            "legend": [
                {
                    "data": [
                        "\u6d59\u6c5f\u7701",
                        "\u5e7f\u4e1c\u7701",
                        "\u6e56\u5357\u7701",
                        "\u4e0a\u6d77\u5e02",
                        "\u91cd\u5e86\u5e02",
                        "\u56db\u5ddd\u7701",
                        "\u6cb3\u5357\u7701",
                        "\u6c5f\u82cf\u7701"
                    ],
                    "selectedMode": "multiple",
                    "show": true,
                    "left": "20%",
                    "top": "top",
                    "orient": "horizontal",
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "series": [
                {
                    "type": "effectScatter",
                    "name": "\u6d59\u6c5f\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 37.233333333333334,
                    "data": [
                        [
                            [
                                13.0
                            ],
                            [
                                -29.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 3001666
                },
                {
                    "type": "effectScatter",
                    "name": "\u5e7f\u4e1c\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 39.233333333333334,
                    "data": [
                        [
                            [
                                26.0
                            ],
                            [
                                -21.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 3001666
                },
                {
                    "type": "effectScatter",
                    "name": "\u6e56\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 30.4,
                    "data": [
                        [
                            [
                                33.0
                            ],
                            [
                                2.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 3001666
                },
                {
                    "type": "effectScatter",
                    "name": "\u4e0a\u6d77\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 10.066666666666666,
                    "data": [
                        [
                            [
                                7.0
                            ],
                            [
                                -43.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 3001666
                },
                {
                    "type": "effectScatter",
                    "name": "\u91cd\u5e86\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 16.2,
                    "data": [
                        [
                            [
                                18.0
                            ],
                            [
                                9.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 3001666
                },
                {
                    "type": "effectScatter",
                    "name": "\u56db\u5ddd\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 13.9,
                    "data": [
                        [
                            [
                                12.0
                            ],
                            [
                                14.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 3001666
                },
                {
                    "type": "effectScatter",
                    "name": "\u6cb3\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 36.833333333333336,
                    "data": [
                        [
                            [
                                32.0
                            ],
                            [
                                -15.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 3001666
                },
                {
                    "type": "effectScatter",
                    "name": "\u6c5f\u82cf\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 17.166666666666668,
                    "data": [
                        [
                            [
                                23.0
                            ],
                            [
                                -3.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 3001666
                }
            ],
            "title": [
                {
                    "text": "2020-02-10 \u75ab\u60c5\u60c5\u51b5",
                    "left": "auto",
                    "top": "auto",
                    "textStyle": {
                        "fontSize": 18
                    },
                    "subtextStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "tooltip": {
                "trigger": "item",
                "triggerOn": "mousemove|click",
                "axisPointer": {
                    "type": "cross"
                },
                "textStyle": {
                    "fontSize": 14
                },
                "backgroundColor": "rgba(50,50,50,0.7)",
                "borderColor": "#333",
                "borderWidth": 0
            }
        },
        {
            "color": [
                "#c23531",
                "#2f4554",
                "#61a0a8",
                "#d48265",
                "#749f83",
                "#ca8622",
                "#bda29a",
                "#6e7074",
                "#546570",
                "#c4ccd3",
                "#f05b72",
                "#ef5b9c",
                "#f47920",
                "#905a3d",
                "#fab27b",
                "#2a5caa",
                "#444693",
                "#726930",
                "#b2d235",
                "#6d8346",
                "#ac6767",
                "#1d953f",
                "#6950a1",
                "#918597",
                "#f6f5ec"
            ],
            "legend": [
                {
                    "data": [
                        "\u6d59\u6c5f\u7701",
                        "\u5e7f\u4e1c\u7701",
                        "\u6e56\u5357\u7701",
                        "\u4e0a\u6d77\u5e02",
                        "\u91cd\u5e86\u5e02",
                        "\u56db\u5ddd\u7701",
                        "\u6cb3\u5357\u7701",
                        "\u6c5f\u82cf\u7701"
                    ],
                    "selectedMode": "multiple",
                    "show": true,
                    "left": "20%",
                    "top": "top",
                    "orient": "horizontal",
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "series": [
                {
                    "type": "effectScatter",
                    "name": "\u6d59\u6c5f\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 37.7,
                    "data": [
                        [
                            [
                                14.0
                            ],
                            [
                                -42.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7591433
                },
                {
                    "type": "effectScatter",
                    "name": "\u5e7f\u4e1c\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 40.63333333333333,
                    "data": [
                        [
                            [
                                42.0
                            ],
                            [
                                -13.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7591433
                },
                {
                    "type": "effectScatter",
                    "name": "\u6e56\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 31.533333333333335,
                    "data": [
                        [
                            [
                                34.0
                            ],
                            [
                                -1.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7591433
                },
                {
                    "type": "effectScatter",
                    "name": "\u4e0a\u6d77\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 10.2,
                    "data": [
                        [
                            [
                                4.0
                            ],
                            [
                                -3.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7591433
                },
                {
                    "type": "effectScatter",
                    "name": "\u91cd\u5e86\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 16.833333333333332,
                    "data": [
                        [
                            [
                                19.0
                            ],
                            [
                                1.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7591433
                },
                {
                    "type": "effectScatter",
                    "name": "\u56db\u5ddd\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 14.533333333333333,
                    "data": [
                        [
                            [
                                19.0
                            ],
                            [
                                -43.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7591433
                },
                {
                    "type": "effectScatter",
                    "name": "\u6cb3\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 37.833333333333336,
                    "data": [
                        [
                            [
                                30.0
                            ],
                            [
                                -35.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7591433
                },
                {
                    "type": "effectScatter",
                    "name": "\u6c5f\u82cf\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 18.1,
                    "data": [
                        [
                            [
                                28.0
                            ],
                            [
                                -2.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 7591433
                }
            ],
            "title": [
                {
                    "text": "2020-02-11 \u75ab\u60c5\u60c5\u51b5",
                    "left": "auto",
                    "top": "auto",
                    "textStyle": {
                        "fontSize": 18
                    },
                    "subtextStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "tooltip": {
                "trigger": "item",
                "triggerOn": "mousemove|click",
                "axisPointer": {
                    "type": "cross"
                },
                "textStyle": {
                    "fontSize": 14
                },
                "backgroundColor": "rgba(50,50,50,0.7)",
                "borderColor": "#333",
                "borderWidth": 0
            }
        },
        {
            "color": [
                "#c23531",
                "#2f4554",
                "#61a0a8",
                "#d48265",
                "#749f83",
                "#ca8622",
                "#bda29a",
                "#6e7074",
                "#546570",
                "#c4ccd3",
                "#f05b72",
                "#ef5b9c",
                "#f47920",
                "#905a3d",
                "#fab27b",
                "#2a5caa",
                "#444693",
                "#726930",
                "#b2d235",
                "#6d8346",
                "#ac6767",
                "#1d953f",
                "#6950a1",
                "#918597",
                "#f6f5ec"
            ],
            "legend": [
                {
                    "data": [
                        "\u6d59\u6c5f\u7701",
                        "\u5e7f\u4e1c\u7701",
                        "\u6e56\u5357\u7701",
                        "\u4e0a\u6d77\u5e02",
                        "\u91cd\u5e86\u5e02",
                        "\u56db\u5ddd\u7701",
                        "\u6cb3\u5357\u7701",
                        "\u6c5f\u82cf\u7701"
                    ],
                    "selectedMode": "multiple",
                    "show": true,
                    "left": "20%",
                    "top": "top",
                    "orient": "horizontal",
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "series": [
                {
                    "type": "effectScatter",
                    "name": "\u6d59\u6c5f\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 38.166666666666664,
                    "data": [
                        [
                            [
                                14.0
                            ],
                            [
                                -67.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 822715
                },
                {
                    "type": "effectScatter",
                    "name": "\u5e7f\u4e1c\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 41.36666666666667,
                    "data": [
                        [
                            [
                                22.0
                            ],
                            [
                                -12.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 822715
                },
                {
                    "type": "effectScatter",
                    "name": "\u6e56\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 32.266666666666666,
                    "data": [
                        [
                            [
                                22.0
                            ],
                            [
                                -39.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 822715
                },
                {
                    "type": "effectScatter",
                    "name": "\u4e0a\u6d77\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 10.433333333333334,
                    "data": [
                        [
                            [
                                7.0
                            ],
                            [
                                6.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 822715
                },
                {
                    "type": "effectScatter",
                    "name": "\u91cd\u5e86\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 17.266666666666666,
                    "data": [
                        [
                            [
                                13.0
                            ],
                            [
                                13.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 822715
                },
                {
                    "type": "effectScatter",
                    "name": "\u56db\u5ddd\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 15.033333333333333,
                    "data": [
                        [
                            [
                                15.0
                            ],
                            [
                                -65.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 822715
                },
                {
                    "type": "effectScatter",
                    "name": "\u6cb3\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 38.96666666666667,
                    "data": [
                        [
                            [
                                34.0
                            ],
                            [
                                -59.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 822715
                },
                {
                    "type": "effectScatter",
                    "name": "\u6c5f\u82cf\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 19.0,
                    "data": [
                        [
                            [
                                27.0
                            ],
                            [
                                -3.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 822715
                }
            ],
            "title": [
                {
                    "text": "2020-02-12 \u75ab\u60c5\u60c5\u51b5",
                    "left": "auto",
                    "top": "auto",
                    "textStyle": {
                        "fontSize": 18
                    },
                    "subtextStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "tooltip": {
                "trigger": "item",
                "triggerOn": "mousemove|click",
                "axisPointer": {
                    "type": "cross"
                },
                "textStyle": {
                    "fontSize": 14
                },
                "backgroundColor": "rgba(50,50,50,0.7)",
                "borderColor": "#333",
                "borderWidth": 0
            }
        },
        {
            "color": [
                "#c23531",
                "#2f4554",
                "#61a0a8",
                "#d48265",
                "#749f83",
                "#ca8622",
                "#bda29a",
                "#6e7074",
                "#546570",
                "#c4ccd3",
                "#f05b72",
                "#ef5b9c",
                "#f47920",
                "#905a3d",
                "#fab27b",
                "#2a5caa",
                "#444693",
                "#726930",
                "#b2d235",
                "#6d8346",
                "#ac6767",
                "#1d953f",
                "#6950a1",
                "#918597",
                "#f6f5ec"
            ],
            "legend": [
                {
                    "data": [
                        "\u6d59\u6c5f\u7701",
                        "\u5e7f\u4e1c\u7701",
                        "\u6e56\u5357\u7701",
                        "\u4e0a\u6d77\u5e02",
                        "\u91cd\u5e86\u5e02",
                        "\u56db\u5ddd\u7701",
                        "\u6cb3\u5357\u7701",
                        "\u6c5f\u82cf\u7701"
                    ],
                    "selectedMode": "multiple",
                    "show": true,
                    "left": "20%",
                    "top": "top",
                    "orient": "horizontal",
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "series": [
                {
                    "type": "effectScatter",
                    "name": "\u6d59\u6c5f\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 38.5,
                    "data": [
                        [
                            [
                                10.0
                            ],
                            [
                                -75.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1019696
                },
                {
                    "type": "effectScatter",
                    "name": "\u5e7f\u4e1c\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 42.03333333333333,
                    "data": [
                        [
                            [
                                20.0
                            ],
                            [
                                -106.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1019696
                },
                {
                    "type": "effectScatter",
                    "name": "\u6e56\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 32.93333333333333,
                    "data": [
                        [
                            [
                                20.0
                            ],
                            [
                                -29.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1019696
                },
                {
                    "type": "effectScatter",
                    "name": "\u4e0a\u6d77\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 10.6,
                    "data": [
                        [
                            [
                                5.0
                            ],
                            [
                                -27.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1019696
                },
                {
                    "type": "effectScatter",
                    "name": "\u91cd\u5e86\u5e02",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 17.633333333333333,
                    "data": [
                        [
                            [
                                11.0
                            ],
                            [
                                -14.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1019696
                },
                {
                    "type": "effectScatter",
                    "name": "\u56db\u5ddd\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 15.433333333333334,
                    "data": [
                        [
                            [
                                12.0
                            ],
                            [
                                -41.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1019696
                },
                {
                    "type": "effectScatter",
                    "name": "\u6cb3\u5357\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 39.46666666666667,
                    "data": [
                        [
                            [
                                15.0
                            ],
                            [
                                -5.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1019696
                },
                {
                    "type": "effectScatter",
                    "name": "\u6c5f\u82cf\u7701",
                    "showEffectOn": "render",
                    "rippleEffect": {
                        "brushType": "stroke",
                        "scale": 2.5,
                        "period": 4
                    },
                    "symbol": "circle",
                    "symbolSize": 19.766666666666666,
                    "data": [
                        [
                            [
                                23.0
                            ],
                            [
                                -10.0
                            ]
                        ]
                    ],
                    "label": {
                        "normal": {
                            "show": false,
                            "position": "top",
                            "textStyle": {
                                "fontSize": 12
                            }
                        },
                        "emphasis": {
                            "show": true,
                            "textStyle": {
                                "fontSize": 12
                            }
                        }
                    },
                    "seriesId": 1019696
                }
            ],
            "title": [
                {
                    "text": "2020-02-13 \u75ab\u60c5\u60c5\u51b5",
                    "left": "auto",
                    "top": "auto",
                    "textStyle": {
                        "fontSize": 18
                    },
                    "subtextStyle": {
                        "fontSize": 12
                    }
                }
            ],
            "tooltip": {
                "trigger": "item",
                "triggerOn": "mousemove|click",
                "axisPointer": {
                    "type": "cross"
                },
                "textStyle": {
                    "fontSize": 14
                },
                "backgroundColor": "rgba(50,50,50,0.7)",
                "borderColor": "#333",
                "borderWidth": 0
            }
        }
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>

<hr>
<p><strong>知识点</strong></p>
<blockquote>
<ul>
<li><code>pe.Timeline()</code>的参数<blockquote>
<ul>
<li><code>is_auto_play=False</code>，是否自动播放，默认为 <code>Flase</code></li>
<li><code>timeline_play_interval=2000</code>，播放的速度（跳动的间隔），单位毫秒（ms）</li>
<li><code>timeline_bottom=&#39;0%&#39;</code>，<code>timeline</code> 组件离容器底侧的距离，值可以是像 20 这样的具体像素值，可以是像 ‘20%’ 这样相对于容器高宽的百分比，也可以是 ‘left’, ‘center’, ‘right’。如果 left 的值为’left’, ‘center’, ‘right’，组件会根据相应的位置自动对齐。</li>
<li>更多的参数解释，可以参考timeline.py里的具体内容哦</li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
<p>本章内容如上，下一章将开始制作具有地理空间信息的图啦~敬请期待！</p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
  </entry>
  <entry>
    <title>新冠病毒疫情分析学习06-不同省市确诊病例与疑似病例对比</title>
    <url>/2020/006-xg/</url>
    <content><![CDATA[<p>这章通过分地区来查看疫情病例的增长情况，并构建函数快速输出指定省市的疫情病例增长曲线</p>
<p>首先依然准备好数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment"># 设置不弹出警告</span></span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">'*/*/data_ncov.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间序列转换</span></span><br><span class="line">df[<span class="string">'date'</span>] = df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)     <span class="comment"># 先将字段转化为字符串</span></span><br><span class="line">df[<span class="string">'date'</span>] = pd.to_datetime(df[<span class="string">'date'</span>])   <span class="comment"># 再进行时间序列转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取全国数据，并按天计算每日新增数据</span></span><br><span class="line">data_china = df.groupby(<span class="string">'date'</span>)[[<span class="string">'疑似'</span>,<span class="string">'确诊'</span>,<span class="string">'死亡'</span>]].sum()</span><br><span class="line">data_china[<span class="string">'疑似新增'</span>] = data_china[<span class="string">'疑似'</span>] - data_china[<span class="string">'疑似'</span>].shift()</span><br><span class="line">data_china[<span class="string">'确诊新增'</span>] = data_china[<span class="string">'确诊'</span>] - data_china[<span class="string">'确诊'</span>].shift()</span><br><span class="line">data_china[<span class="string">'死亡新增'</span>] = data_china[<span class="string">'死亡'</span>] - data_china[<span class="string">'死亡'</span>].shift()</span><br><span class="line">data_china.head()</span><br></pre></td></tr></table></figure>

<h2 id="分别提取湖北、非湖北的数据"><a href="#分别提取湖北、非湖北的数据" class="headerlink" title="分别提取湖北、非湖北的数据"></a>分别提取湖北、非湖北的数据</h2><p>参考全国数据的提取及每日新增数据计算方法，提取湖北、非湖北的数据，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 提取湖北省数据，并按天计算每日新增数据</span></span><br><span class="line">data_hb = df[df[<span class="string">'省市'</span>] == <span class="string">'湖北省'</span>]</span><br><span class="line">data_hb[<span class="string">'疑似新增'</span>] = data_hb[<span class="string">'疑似'</span>] - data_hb[<span class="string">'疑似'</span>].shift()</span><br><span class="line">data_hb[<span class="string">'确诊新增'</span>] = data_hb[<span class="string">'确诊'</span>] - data_hb[<span class="string">'确诊'</span>].shift()</span><br><span class="line">data_hb[<span class="string">'死亡新增'</span>] = data_hb[<span class="string">'死亡'</span>] - data_hb[<span class="string">'死亡'</span>].shift()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取非湖北省数据，并按天计算每日新增数据</span></span><br><span class="line">data_nothb_all = df[df[<span class="string">'省市'</span>] != <span class="string">'湖北省'</span>]</span><br><span class="line">data_nothb = data_nothb_all.groupby(<span class="string">'date'</span>)[[<span class="string">'疑似'</span>,<span class="string">'确诊'</span>,<span class="string">'死亡'</span>]].sum()</span><br><span class="line">data_nothb[<span class="string">'疑似新增'</span>] = data_nothb[<span class="string">'疑似'</span>] - data_nothb[<span class="string">'疑似'</span>].shift()</span><br><span class="line">data_nothb[<span class="string">'确诊新增'</span>] = data_nothb[<span class="string">'确诊'</span>] - data_nothb[<span class="string">'确诊'</span>].shift()</span><br><span class="line">data_nothb[<span class="string">'死亡新增'</span>] = data_nothb[<span class="string">'死亡'</span>] - data_nothb[<span class="string">'死亡'</span>].shift()</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以看一下两个数据</span></span><br><span class="line">data_hb.head()</span><br><span class="line">data_nothb.head()</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="绘制多系列折线图-不同地区疫情病例增长曲线"><a href="#绘制多系列折线图-不同地区疫情病例增长曲线" class="headerlink" title="绘制多系列折线图-不同地区疫情病例增长曲线"></a>绘制多系列折线图-不同地区疫情病例增长曲线</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制多系列折线图</span></span><br><span class="line"><span class="keyword">import</span> pyecharts <span class="keyword">as</span> pe</span><br><span class="line">line = pe.Line(<span class="string">'不同地区疫情病例增长曲线'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x轴 - 日期</span></span><br><span class="line">x = data_china.index.astype(<span class="string">'str'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置y1轴 - 湖北</span></span><br><span class="line">y1 = data_hb[<span class="string">'确诊新增'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置y2轴 - 非湖北</span></span><br><span class="line">y2 = data_nothb[<span class="string">'确诊新增'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置y3轴 - 全国</span></span><br><span class="line">y3 = data_china[<span class="string">'确诊新增'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制图表</span></span><br><span class="line">line.add(<span class="string">'湖北新增'</span>, x, y1)</span><br><span class="line">line.add(<span class="string">'非湖北新增'</span>, x, y2)</span><br><span class="line">line.add(<span class="string">'全国新增'</span>, x, y3, tooltip_trigger = <span class="string">'axis'</span>, tooltip_axispointer_type = <span class="string">'cross'</span>)</span><br><span class="line">line</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<div id="echarts7667" style="width: 81%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts7667'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "\u4e0d\u540c\u5730\u533a\u75ab\u60c5\u75c5\u4f8b\u589e\u957f\u66f2\u7ebf",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "toolbox": {
        "show": true,
        "orient": "vertical",
        "left": "95%",
        "top": "center",
        "feature": {
            "saveAsImage": {
                "show": true,
                "title": "save as image"
            },
            "restore": {
                "show": true,
                "title": "restore"
            },
            "dataView": {
                "show": true,
                "title": "data view"
            }
        }
    },
    "series_id": 876253,
    "tooltip": {
        "trigger": "axis",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "cross"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "line",
            "name": "\u6e56\u5317\u65b0\u589e",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": false,
            "step": false,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-22",
                    NaN
                ],
                [
                    "2020-01-23",
                    105.0
                ],
                [
                    "2020-01-24",
                    180.0
                ],
                [
                    "2020-01-25",
                    323.0
                ],
                [
                    "2020-01-26",
                    371.0
                ],
                [
                    "2020-01-27",
                    1291.0
                ],
                [
                    "2020-01-28",
                    840.0
                ],
                [
                    "2020-01-29",
                    1032.0
                ],
                [
                    "2020-01-30",
                    1220.0
                ],
                [
                    "2020-01-31",
                    1347.0
                ],
                [
                    "2020-02-01",
                    1921.0
                ],
                [
                    "2020-02-02",
                    2103.0
                ],
                [
                    "2020-02-03",
                    2345.0
                ],
                [
                    "2020-02-04",
                    3156.0
                ],
                [
                    "2020-02-05",
                    2987.0
                ],
                [
                    "2020-02-06",
                    2447.0
                ],
                [
                    "2020-02-07",
                    2841.0
                ],
                [
                    "2020-02-08",
                    2147.0
                ],
                [
                    "2020-02-09",
                    2531.0
                ],
                [
                    "2020-02-10",
                    2097.0
                ],
                [
                    "2020-02-11",
                    1638.0
                ],
                [
                    "2020-02-12",
                    14840.0
                ],
                [
                    "2020-02-13",
                    3780.0
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 876253
        },
        {
            "type": "line",
            "name": "\u975e\u6e56\u5317\u65b0\u589e",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": false,
            "step": false,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-22",
                    NaN
                ],
                [
                    "2020-01-23",
                    156.0
                ],
                [
                    "2020-01-24",
                    282.0
                ],
                [
                    "2020-01-25",
                    365.0
                ],
                [
                    "2020-01-26",
                    405.0
                ],
                [
                    "2020-01-27",
                    481.0
                ],
                [
                    "2020-01-28",
                    622.0
                ],
                [
                    "2020-01-29",
                    709.0
                ],
                [
                    "2020-01-30",
                    764.0
                ],
                [
                    "2020-01-31",
                    754.0
                ],
                [
                    "2020-02-01",
                    669.0
                ],
                [
                    "2020-02-02",
                    724.0
                ],
                [
                    "2020-02-03",
                    888.0
                ],
                [
                    "2020-02-04",
                    736.0
                ],
                [
                    "2020-02-05",
                    710.0
                ],
                [
                    "2020-02-06",
                    704.0
                ],
                [
                    "2020-02-07",
                    546.0
                ],
                [
                    "2020-02-08",
                    506.0
                ],
                [
                    "2020-02-09",
                    453.0
                ],
                [
                    "2020-02-10",
                    376.0
                ],
                [
                    "2020-02-11",
                    384.0
                ],
                [
                    "2020-02-12",
                    312.0
                ],
                [
                    "2020-02-13",
                    270.0
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 876253
        },
        {
            "type": "line",
            "name": "\u5168\u56fd\u65b0\u589e",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": false,
            "step": false,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-22",
                    NaN
                ],
                [
                    "2020-01-23",
                    261.0
                ],
                [
                    "2020-01-24",
                    462.0
                ],
                [
                    "2020-01-25",
                    688.0
                ],
                [
                    "2020-01-26",
                    776.0
                ],
                [
                    "2020-01-27",
                    1772.0
                ],
                [
                    "2020-01-28",
                    1462.0
                ],
                [
                    "2020-01-29",
                    1741.0
                ],
                [
                    "2020-01-30",
                    1984.0
                ],
                [
                    "2020-01-31",
                    2101.0
                ],
                [
                    "2020-02-01",
                    2590.0
                ],
                [
                    "2020-02-02",
                    2827.0
                ],
                [
                    "2020-02-03",
                    3233.0
                ],
                [
                    "2020-02-04",
                    3892.0
                ],
                [
                    "2020-02-05",
                    3697.0
                ],
                [
                    "2020-02-06",
                    3151.0
                ],
                [
                    "2020-02-07",
                    3387.0
                ],
                [
                    "2020-02-08",
                    2653.0
                ],
                [
                    "2020-02-09",
                    2984.0
                ],
                [
                    "2020-02-10",
                    2473.0
                ],
                [
                    "2020-02-11",
                    2022.0
                ],
                [
                    "2020-02-12",
                    15152.0
                ],
                [
                    "2020-02-13",
                    4050.0
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 876253
        }
    ],
    "legend": [
        {
            "data": [
                "\u6e56\u5317\u65b0\u589e",
                "\u975e\u6e56\u5317\u65b0\u589e",
                "\u5168\u56fd\u65b0\u589e"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "center",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "category",
            "splitLine": {
                "show": false
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            },
            "data": [
                "2020-01-22",
                "2020-01-23",
                "2020-01-24",
                "2020-01-25",
                "2020-01-26",
                "2020-01-27",
                "2020-01-28",
                "2020-01-29",
                "2020-01-30",
                "2020-01-31",
                "2020-02-01",
                "2020-02-02",
                "2020-02-03",
                "2020-02-04",
                "2020-02-05",
                "2020-02-06",
                "2020-02-07",
                "2020-02-08",
                "2020-02-09",
                "2020-02-10",
                "2020-02-11",
                "2020-02-12",
                "2020-02-13"
            ]
        }
    ],
    "yAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>

<h2 id="构建函数快速输出指定省市的疫情病例增长曲线"><a href="#构建函数快速输出指定省市的疫情病例增长曲线" class="headerlink" title="构建函数快速输出指定省市的疫情病例增长曲线"></a>构建函数快速输出指定省市的疫情病例增长曲线</h2><p><strong>首先梳理一下流程</strong></p>
<blockquote>
<p>第一步：构建函数提取数据</p>
<blockquote>
<p>按照省市名称提取数据<br>分别计算疑似病例、确诊病例、死亡病例的新增情况</p>
</blockquote>
</blockquote>
<blockquote>
<p>第二步：构建函数绘制疫情病例增长曲线</p>
<blockquote>
<p>用第一步的函数提取数据<br>设置x、y轴的数据<br>绘制图表</p>
</blockquote>
</blockquote>
<hr>
<p>构建第一步函数，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 构建函数提取数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">regiondata</span><span class="params">(where)</span>:</span></span><br><span class="line">    <span class="comment"># 提取数据</span></span><br><span class="line">    datai = df[df[<span class="string">'省市'</span>] == where]</span><br><span class="line">    <span class="comment"># 分别计算新增数据</span></span><br><span class="line">    datai[<span class="string">'疑似新增'</span>] = datai[<span class="string">'疑似'</span>] - datai[<span class="string">'疑似'</span>].shift()</span><br><span class="line">    datai[<span class="string">'确诊新增'</span>] = datai[<span class="string">'确诊'</span>] - datai[<span class="string">'确诊'</span>].shift()</span><br><span class="line">    datai[<span class="string">'死亡新增'</span>] = datai[<span class="string">'死亡'</span>] - datai[<span class="string">'死亡'</span>].shift()</span><br><span class="line">    <span class="comment"># 返回数据</span></span><br><span class="line">    <span class="keyword">return</span> datai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数提取某省市数据</span></span><br><span class="line">data_bj = regiondata(<span class="string">'北京市'</span>)</span><br><span class="line">data_sh = regiondata(<span class="string">'上海市'</span>)</span><br><span class="line">data_cq = regiondata(<span class="string">'重庆市'</span>)</span><br><span class="line">data_sh.head()</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">区域编码</th>
<th align="center">省市</th>
<th align="center">疑似</th>
<th align="center">确诊</th>
<th align="center">死亡</th>
<th align="center">date</th>
<th align="center">疑似新增</th>
<th align="center">确诊新增</th>
<th align="center">死亡新增</th>
</tr>
</thead>
<tbody><tr>
<td align="center">144</td>
<td align="center">310000</td>
<td align="center">上海市</td>
<td align="center">16</td>
<td align="center">16</td>
<td align="center">0</td>
<td align="center">2020-01-22</td>
<td align="center">NaN</td>
<td align="center">NaN</td>
<td align="center">NaN</td>
</tr>
<tr>
<td align="center">145</td>
<td align="center">310000</td>
<td align="center">上海市</td>
<td align="center">34</td>
<td align="center">20</td>
<td align="center">0</td>
<td align="center">2020-01-23</td>
<td align="center">18.0</td>
<td align="center">4.0</td>
<td align="center">0.0</td>
</tr>
<tr>
<td align="center">146</td>
<td align="center">310000</td>
<td align="center">上海市</td>
<td align="center">72</td>
<td align="center">33</td>
<td align="center">0</td>
<td align="center">2020-01-24</td>
<td align="center">8.0</td>
<td align="center">13.0</td>
<td align="center">0.0</td>
</tr>
<tr>
<td align="center">147</td>
<td align="center">310000</td>
<td align="center">上海市</td>
<td align="center">95</td>
<td align="center">40</td>
<td align="center">1</td>
<td align="center">2020-01-25</td>
<td align="center">23.0</td>
<td align="center">7.0</td>
<td align="center">1.0</td>
</tr>
<tr>
<td align="center">148</td>
<td align="center">310000</td>
<td align="center">上海市</td>
<td align="center">90</td>
<td align="center">53</td>
<td align="center">1</td>
<td align="center">2020-01-26</td>
<td align="center">-5.0</td>
<td align="center">13.0</td>
<td align="center">0.0</td>
</tr>
</tbody></table>
<hr>
<p>构建第二步函数，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 构建函数绘制疫情病例增长曲线</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fig2</span><span class="params">(r1, r2, r3)</span>:</span></span><br><span class="line">    <span class="comment"># 提取数据,regiondata(where)</span></span><br><span class="line">    data1 = regiondata(r1)</span><br><span class="line">    data2 = regiondata(r2)</span><br><span class="line">    data3 = regiondata(r3)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 设置x、y</span></span><br><span class="line">    x = data1[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)</span><br><span class="line">    y1 = data1[<span class="string">'确诊新增'</span>]</span><br><span class="line">    y2 = data2[<span class="string">'确诊新增'</span>]</span><br><span class="line">    y3 = data3[<span class="string">'确诊新增'</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 分地区新增确诊病例情况</span></span><br><span class="line">    line = pe.Line(<span class="string">'分地区新增确诊病例情况'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 绘制图表</span></span><br><span class="line">    line.add(r1, x, y1, is_step=<span class="literal">True</span>)  <span class="comment"># is_step参数可以设置阶梯线图</span></span><br><span class="line">    line.add(r2, x, y2, is_step=<span class="literal">True</span>)</span><br><span class="line">    line.add(r3, x, y3, is_step=<span class="literal">True</span>, tooltip_trigger = <span class="string">'axis'</span>, tooltip_axispointer_type = <span class="string">'cross'</span>)</span><br><span class="line">    <span class="keyword">return</span> line.render(<span class="string">'*/*/*.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#可更换其他省市</span></span><br><span class="line">fig2(<span class="string">'北京市'</span>,<span class="string">'上海市'</span>,<span class="string">'重庆市'</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<div id="echarts1632" style="width: 81%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts1632'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "\u5206\u5730\u533a\u65b0\u589e\u786e\u8bca\u75c5\u4f8b\u60c5\u51b5",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "toolbox": {
        "show": true,
        "orient": "vertical",
        "left": "95%",
        "top": "center",
        "feature": {
            "saveAsImage": {
                "show": true,
                "title": "save as image"
            },
            "restore": {
                "show": true,
                "title": "restore"
            },
            "dataView": {
                "show": true,
                "title": "data view"
            }
        }
    },
    "series_id": 4621006,
    "tooltip": {
        "trigger": "axis",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "cross"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "line",
            "name": "\u5317\u4eac\u5e02",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": false,
            "step": true,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-22",
                    NaN
                ],
                [
                    "2020-01-23",
                    12.0
                ],
                [
                    "2020-01-24",
                    10.0
                ],
                [
                    "2020-01-25",
                    15.0
                ],
                [
                    "2020-01-26",
                    16.0
                ],
                [
                    "2020-01-27",
                    13.0
                ],
                [
                    "2020-01-28",
                    16.0
                ],
                [
                    "2020-01-29",
                    16.0
                ],
                [
                    "2020-01-30",
                    20.0
                ],
                [
                    "2020-01-31",
                    24.0
                ],
                [
                    "2020-02-01",
                    27.0
                ],
                [
                    "2020-02-02",
                    29.0
                ],
                [
                    "2020-02-03",
                    16.0
                ],
                [
                    "2020-02-04",
                    25.0
                ],
                [
                    "2020-02-05",
                    21.0
                ],
                [
                    "2020-02-06",
                    23.0
                ],
                [
                    "2020-02-07",
                    18.0
                ],
                [
                    "2020-02-08",
                    11.0
                ],
                [
                    "2020-02-09",
                    11.0
                ],
                [
                    "2020-02-10",
                    5.0
                ],
                [
                    "2020-02-11",
                    10.0
                ],
                [
                    "2020-02-12",
                    14.0
                ],
                [
                    "2020-02-13",
                    6.0
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 4621006
        },
        {
            "type": "line",
            "name": "\u4e0a\u6d77\u5e02",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": false,
            "step": true,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-22",
                    NaN
                ],
                [
                    "2020-01-23",
                    4.0
                ],
                [
                    "2020-01-24",
                    13.0
                ],
                [
                    "2020-01-25",
                    7.0
                ],
                [
                    "2020-01-26",
                    13.0
                ],
                [
                    "2020-01-27",
                    13.0
                ],
                [
                    "2020-01-28",
                    14.0
                ],
                [
                    "2020-01-29",
                    21.0
                ],
                [
                    "2020-01-30",
                    27.0
                ],
                [
                    "2020-01-31",
                    25.0
                ],
                [
                    "2020-02-01",
                    24.0
                ],
                [
                    "2020-02-02",
                    16.0
                ],
                [
                    "2020-02-03",
                    15.0
                ],
                [
                    "2020-02-04",
                    25.0
                ],
                [
                    "2020-02-05",
                    21.0
                ],
                [
                    "2020-02-06",
                    15.0
                ],
                [
                    "2020-02-07",
                    12.0
                ],
                [
                    "2020-02-08",
                    11.0
                ],
                [
                    "2020-02-09",
                    3.0
                ],
                [
                    "2020-02-10",
                    7.0
                ],
                [
                    "2020-02-11",
                    4.0
                ],
                [
                    "2020-02-12",
                    7.0
                ],
                [
                    "2020-02-13",
                    5.0
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 4621006
        },
        {
            "type": "line",
            "name": "\u91cd\u5e86\u5e02",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": false,
            "step": true,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-22",
                    NaN
                ],
                [
                    "2020-01-23",
                    18.0
                ],
                [
                    "2020-01-24",
                    30.0
                ],
                [
                    "2020-01-25",
                    18.0
                ],
                [
                    "2020-01-26",
                    35.0
                ],
                [
                    "2020-01-27",
                    22.0
                ],
                [
                    "2020-01-28",
                    15.0
                ],
                [
                    "2020-01-29",
                    18.0
                ],
                [
                    "2020-01-30",
                    41.0
                ],
                [
                    "2020-01-31",
                    32.0
                ],
                [
                    "2020-02-01",
                    24.0
                ],
                [
                    "2020-02-02",
                    38.0
                ],
                [
                    "2020-02-03",
                    37.0
                ],
                [
                    "2020-02-04",
                    29.0
                ],
                [
                    "2020-02-05",
                    23.0
                ],
                [
                    "2020-02-06",
                    22.0
                ],
                [
                    "2020-02-07",
                    15.0
                ],
                [
                    "2020-02-08",
                    20.0
                ],
                [
                    "2020-02-09",
                    22.0
                ],
                [
                    "2020-02-10",
                    18.0
                ],
                [
                    "2020-02-11",
                    19.0
                ],
                [
                    "2020-02-12",
                    13.0
                ],
                [
                    "2020-02-13",
                    11.0
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 4621006
        }
    ],
    "legend": [
        {
            "data": [
                "\u5317\u4eac\u5e02",
                "\u4e0a\u6d77\u5e02",
                "\u91cd\u5e86\u5e02"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "center",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "category",
            "splitLine": {
                "show": false
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            },
            "data": [
                "2020-01-22",
                "2020-01-23",
                "2020-01-24",
                "2020-01-25",
                "2020-01-26",
                "2020-01-27",
                "2020-01-28",
                "2020-01-29",
                "2020-01-30",
                "2020-01-31",
                "2020-02-01",
                "2020-02-02",
                "2020-02-03",
                "2020-02-04",
                "2020-02-05",
                "2020-02-06",
                "2020-02-07",
                "2020-02-08",
                "2020-02-09",
                "2020-02-10",
                "2020-02-11",
                "2020-02-12",
                "2020-02-13"
            ]
        }
    ],
    "yAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>

<p>以上就是本章内容，快快练习吧！</p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
  </entry>
  <entry>
    <title>geopandas安装记录</title>
    <url>/2020/001-js/</url>
    <content><![CDATA[<p>为了在python上快速的绘制地理空间的图，需要安装geopandas来运行，而在安装的过程中，却出现了很多问题，所以在此一一记录。</p>
<h2 id="什么是geopandas？"><a href="#什么是geopandas？" class="headerlink" title="什么是geopandas？"></a>什么是geopandas？</h2><blockquote>
<p>GeoPandas是一个开源项目，Pandas是Python的一个结构化数据分析的利器,GeoPandas扩展了pandas使用的数据类型，允许对几何类型进行空间操作，DataFrame相当于GIS数据中的一张属性表，使得可以直接操作矢量数据属性表，其目标是使得在python中操作地理数据更方便。</p>
</blockquote>
<p>我们正常都会使用PIP直接安装，然而由于它的几个依赖包都有C扩展，直接安装会导致在Windows上编译失败，最终安装失败。安装geopandas之前需要先安装依赖项 <code>GDAL</code>, <code>Fiona</code> , <code>pyproj</code> ，<code>rtree</code>和<code>shapely</code>。</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h4 id="自动安装"><a href="#自动安装" class="headerlink" title="自动安装"></a>自动安装</h4><ol>
<li><p>首先通过 <code>pip install geopandas</code>直接安装，如果不成功，那么继续往下看</p>
</li>
<li><p>使用<strong>anaconda</strong>，通过<code>conda install geopandas</code>进行安装，该命令会自动安装所需要的依赖包，如果这个也不成功，那么继续往下看</p>
</li>
</ol>
<h4 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h4><ol>
<li><p>以上方式如果都不行，那么则手动安装所需要的依赖包。</p>
<blockquote>
<p>通过该网址下载需要要的包<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p>
</blockquote>
<blockquote>
<p>需要主要的是自己的python版本以及系统是32还是64位</p>
</blockquote>
</li>
</ol>
<ol start="2">
<li><p>下载好进行安装whl，<code>pip install whl</code>文件路径即可，先安装GDAL，然后依次安装其他的。<br>比如 <code>pip install E:\setup_package\rasterio-1.0.28-cp27-cp27m-win_amd64.whl</code><br>依次安装好所需要的依赖包，进行下一步</p>
<blockquote>
<ul>
<li>如果出现问题,此时可以通过<code>conda list</code>来看一下已安装了哪些依赖包，针对出现问题但已经安装的可以更换一个版本试试</li>
<li>如果安装过程中报错，有提示缺少VC++ redistributable，则下载对应的VC++分发包安装，再继续安装。</li>
</ul>
</blockquote>
</li>
</ol>
<ol start="3">
<li>如果所有依赖包都成功安装，那么最后只需简单的<code>pip install geopandas</code>即可</li>
</ol>
]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
  </entry>
  <entry>
    <title>新冠病毒疫情分析学习05-确诊病例与疑似病例对比</title>
    <url>/2020/005-xg/</url>
    <content><![CDATA[<p>这章来分析确诊病例与疑似病例的增长情况</p>
<p>首先准备数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment"># 设置不弹出警告</span></span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">'*/*/data_ncov.xlsx'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间序列转换</span></span><br><span class="line">df[<span class="string">'date'</span>] = df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)     <span class="comment"># 先将字段转化为字符串</span></span><br><span class="line">df[<span class="string">'date'</span>] = pd.to_datetime(df[<span class="string">'date'</span>])   <span class="comment"># 再进行时间序列转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取全国数据</span></span><br><span class="line">data_china = df.groupby(<span class="string">'date'</span>)[[<span class="string">'疑似'</span>,<span class="string">'确诊'</span>,<span class="string">'死亡'</span>]].sum()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按天计算每日新增数据</span></span><br><span class="line">data_china[<span class="string">'疑似新增'</span>] = data_china[<span class="string">'疑似'</span>] - data_china[<span class="string">'疑似'</span>].shift()</span><br><span class="line">data_china[<span class="string">'确诊新增'</span>] = data_china[<span class="string">'确诊'</span>] - data_china[<span class="string">'确诊'</span>].shift()</span><br><span class="line">data_china[<span class="string">'死亡新增'</span>] = data_china[<span class="string">'死亡'</span>] - data_china[<span class="string">'死亡'</span>].shift()</span><br><span class="line">data_china.head()</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="每日确诊率变化情况"><a href="#每日确诊率变化情况" class="headerlink" title="每日确诊率变化情况"></a>每日确诊率变化情况</h2><p>目前确诊率计算有多种方式，假设需要2天时间对疑似病例进行确诊，则确诊率计算逻辑如下</p>
<ul>
<li>今日确诊率 = 今日新增病例 / 前日疑似病例</li>
</ul>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 计算确诊率</span></span><br><span class="line">data_china[<span class="string">'确诊率'</span>] = data_china[<span class="string">'确诊新增'</span>] / data_china[<span class="string">'疑似'</span>].shift(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保留2位小数</span></span><br><span class="line">data_china[<span class="string">'确诊率'</span>] = data_china[<span class="string">'确诊率'</span>].round(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">data_china.head(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<table>
<thead>
<tr>
<th align="center">疑似</th>
<th align="center">确诊</th>
<th align="center">死亡</th>
<th align="center">疑似新增</th>
<th align="center">确诊新增</th>
<th align="center">死亡新增</th>
<th align="center">确诊率</th>
<th align="center">date</th>
</tr>
</thead>
<tbody><tr>
<td align="center">2020-01-22</td>
<td align="center">393</td>
<td align="center">574</td>
<td align="center">17</td>
<td align="center">NaN</td>
<td align="center">NaN</td>
<td align="center">NaN</td>
<td align="center">NaN</td>
</tr>
<tr>
<td align="center">2020-01-23</td>
<td align="center">1072</td>
<td align="center">835</td>
<td align="center">25</td>
<td align="center">679.0</td>
<td align="center">261.0</td>
<td align="center">8.0</td>
<td align="center">NaN</td>
</tr>
<tr>
<td align="center">2020-01-24</td>
<td align="center">1965</td>
<td align="center">1297</td>
<td align="center">41</td>
<td align="center">893.0</td>
<td align="center">462.0</td>
<td align="center">16.0</td>
<td align="center">1.18</td>
</tr>
<tr>
<td align="center">2020-01-25</td>
<td align="center">2684</td>
<td align="center">1985</td>
<td align="center">56</td>
<td align="center">719.0</td>
<td align="center">688.0</td>
<td align="center">15.0</td>
<td align="center">0.64</td>
</tr>
<tr>
<td align="center">2020-01-26</td>
<td align="center">5794</td>
<td align="center">2761</td>
<td align="center">80</td>
<td align="center">3110.0</td>
<td align="center">776.0</td>
<td align="center">24.0</td>
<td align="center">0.39</td>
</tr>
<tr>
<td align="center">2020-01-27</td>
<td align="center">6973</td>
<td align="center">4533</td>
<td align="center">106</td>
<td align="center">1179.0</td>
<td align="center">1772.0</td>
<td align="center">26.0</td>
<td align="center">0.66</td>
</tr>
<tr>
<td align="center">2020-01-28</td>
<td align="center">9239</td>
<td align="center">5995</td>
<td align="center">132</td>
<td align="center">2266.0</td>
<td align="center">1462.0</td>
<td align="center">26.0</td>
<td align="center">0.25</td>
</tr>
<tr>
<td align="center">2020-01-29</td>
<td align="center">12167</td>
<td align="center">7736</td>
<td align="center">170</td>
<td align="center">2928.0</td>
<td align="center">1741.0</td>
<td align="center">38.0</td>
<td align="center">0.25</td>
</tr>
<tr>
<td align="center">2020-01-30</td>
<td align="center">15238</td>
<td align="center">9720</td>
<td align="center">213</td>
<td align="center">3071.0</td>
<td align="center">1984.0</td>
<td align="center">43.0</td>
<td align="center">0.21</td>
</tr>
<tr>
<td align="center">2020-01-31</td>
<td align="center">17988</td>
<td align="center">11821</td>
<td align="center">259</td>
<td align="center">2750.0</td>
<td align="center">2101.0</td>
<td align="center">46.0</td>
<td align="center">0.17</td>
</tr>
</tbody></table>
<h2 id="绘制每日疑似病例与确诊病例柱状图"><a href="#绘制每日疑似病例与确诊病例柱状图" class="headerlink" title="绘制每日疑似病例与确诊病例柱状图"></a>绘制每日疑似病例与确诊病例柱状图</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制每日疑似病例与确诊比例柱状图</span></span><br><span class="line"><span class="keyword">import</span> pyecharts <span class="keyword">as</span> pe  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建柱状图对象</span></span><br><span class="line">bar = pe.Bar(<span class="string">'每日疑似病例与确诊病例 柱状图'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x轴 - 日期，这里由于前2条数据有空值，故从第3条开始</span></span><br><span class="line">x = data_china.iloc[<span class="number">2</span>::].index.astype(<span class="string">'str'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置y1轴 - 确诊病例</span></span><br><span class="line">y1 = data_china[<span class="string">'确诊'</span>].iloc[<span class="number">2</span>::]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置y2轴 - 疑似病例</span></span><br><span class="line">y2 = data_china[<span class="string">'疑似'</span>].iloc[<span class="number">2</span>::]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制图表</span></span><br><span class="line">bar.add(<span class="string">'确诊病例'</span>, x, y1, is_datazoom_show = <span class="literal">True</span>, datazoom_range = [<span class="number">0</span>,<span class="number">100</span>])</span><br><span class="line">bar.add(<span class="string">'疑似病例'</span>, x, y2)</span><br><span class="line">bar</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<div id="echarts1698" style="width: 81%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts1698'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "\u6bcf\u65e5\u7591\u4f3c\u75c5\u4f8b\u4e0e\u786e\u8bca\u75c5\u4f8b \u67f1\u72b6\u56fe",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "toolbox": {
        "show": true,
        "orient": "vertical",
        "left": "95%",
        "top": "center",
        "feature": {
            "saveAsImage": {
                "show": true,
                "title": "save as image"
            },
            "restore": {
                "show": true,
                "title": "restore"
            },
            "dataView": {
                "show": true,
                "title": "data view"
            }
        }
    },
    "series_id": 5135017,
    "tooltip": {
        "trigger": "item",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "line"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "bar",
            "name": "\u786e\u8bca\u75c5\u4f8b",
            "data": [
                1297.0,
                1985.0,
                2761.0,
                4533.0,
                5995.0,
                7736.0,
                9720.0,
                11821.0,
                14411.0,
                17238.0,
                20471.0,
                24363.0,
                28060.0,
                31211.0,
                34598.0,
                37251.0,
                40235.0,
                42708.0,
                44730.0,
                59882.0,
                63932.0
            ],
            "barCategoryGap": "20%",
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 5135017
        },
        {
            "type": "bar",
            "name": "\u7591\u4f3c\u75c5\u4f8b",
            "data": [
                1965.0,
                2684.0,
                5794.0,
                6973.0,
                9239.0,
                12167.0,
                15238.0,
                17988.0,
                19544.0,
                21558.0,
                23214.0,
                23260.0,
                24702.0,
                26359.0,
                27657.0,
                28942.0,
                23589.0,
                21675.0,
                16067.0,
                13435.0,
                10109.0
            ],
            "barCategoryGap": "20%",
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 5135017
        }
    ],
    "legend": [
        {
            "data": [
                "\u786e\u8bca\u75c5\u4f8b",
                "\u7591\u4f3c\u75c5\u4f8b"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "center",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "category",
            "splitLine": {
                "show": false
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            },
            "data": [
                "2020-01-24",
                "2020-01-25",
                "2020-01-26",
                "2020-01-27",
                "2020-01-28",
                "2020-01-29",
                "2020-01-30",
                "2020-01-31",
                "2020-02-01",
                "2020-02-02",
                "2020-02-03",
                "2020-02-04",
                "2020-02-05",
                "2020-02-06",
                "2020-02-07",
                "2020-02-08",
                "2020-02-09",
                "2020-02-10",
                "2020-02-11",
                "2020-02-12",
                "2020-02-13"
            ]
        }
    ],
    "yAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ],
    "dataZoom": [
        {
            "show": true,
            "type": "slider",
            "start": 0,
            "end": 100,
            "orient": "horizontal"
        }
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>


<hr>
<p><strong>知识点</strong><br><code>bar.add()</code>可以多次使用，添加多个系列</p>
<hr>
<h2 id="绘制确诊率折线图"><a href="#绘制确诊率折线图" class="headerlink" title="绘制确诊率折线图"></a>绘制确诊率折线图</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">line = pe.Line(<span class="string">'确诊率 折线图'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x轴 - 日期</span></span><br><span class="line">x = data_china.iloc[<span class="number">2</span>::].index.astype(<span class="string">'str'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置y轴 - 确诊增长率</span></span><br><span class="line">y = data_china[<span class="string">'确诊率'</span>].iloc[<span class="number">2</span>::]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制图表</span></span><br><span class="line">line.add(<span class="string">'确诊率'</span>, x, y)</span><br><span class="line">line</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<div id="echarts13" style="width: 81%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts13'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "\u786e\u8bca\u7387 \u6298\u7ebf\u56fe",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "toolbox": {
        "show": true,
        "orient": "vertical",
        "left": "95%",
        "top": "center",
        "feature": {
            "saveAsImage": {
                "show": true,
                "title": "save as image"
            },
            "restore": {
                "show": true,
                "title": "restore"
            },
            "dataView": {
                "show": true,
                "title": "data view"
            }
        }
    },
    "series_id": 7099704,
    "tooltip": {
        "trigger": "axis",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "cross"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "line",
            "name": "\u786e\u8bca\u7387",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": true,
            "step": false,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-24",
                    1.18
                ],
                [
                    "2020-01-25",
                    0.64
                ],
                [
                    "2020-01-26",
                    0.39
                ],
                [
                    "2020-01-27",
                    0.66
                ],
                [
                    "2020-01-28",
                    0.25
                ],
                [
                    "2020-01-29",
                    0.25
                ],
                [
                    "2020-01-30",
                    0.21
                ],
                [
                    "2020-01-31",
                    0.17
                ],
                [
                    "2020-02-01",
                    0.17
                ],
                [
                    "2020-02-02",
                    0.16
                ],
                [
                    "2020-02-03",
                    0.17
                ],
                [
                    "2020-02-04",
                    0.18
                ],
                [
                    "2020-02-05",
                    0.16
                ],
                [
                    "2020-02-06",
                    0.14
                ],
                [
                    "2020-02-07",
                    0.14
                ],
                [
                    "2020-02-08",
                    0.1
                ],
                [
                    "2020-02-09",
                    0.11
                ],
                [
                    "2020-02-10",
                    0.09
                ],
                [
                    "2020-02-11",
                    0.09
                ],
                [
                    "2020-02-12",
                    0.7
                ],
                [
                    "2020-02-13",
                    0.25
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 7099704
        }
    ],
    "legend": [
        {
            "data": [
                "\u786e\u8bca\u7387"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "center",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "category",
            "splitLine": {
                "show": false
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            },
            "data": [
                "2020-01-24",
                "2020-01-25",
                "2020-01-26",
                "2020-01-27",
                "2020-01-28",
                "2020-01-29",
                "2020-01-30",
                "2020-01-31",
                "2020-02-01",
                "2020-02-02",
                "2020-02-03",
                "2020-02-04",
                "2020-02-05",
                "2020-02-06",
                "2020-02-07",
                "2020-02-08",
                "2020-02-09",
                "2020-02-10",
                "2020-02-11",
                "2020-02-12",
                "2020-02-13"
            ]
        }
    ],
    "yAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>


<h2 id="合并图表"><a href="#合并图表" class="headerlink" title="合并图表"></a>合并图表</h2><p>通过前面的方法，将两个图标进行合并</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 合并图表</span></span><br><span class="line"><span class="comment"># 设置x、y轴数据</span></span><br><span class="line">x = data_china.iloc[<span class="number">2</span>::].index.astype(<span class="string">'str'</span>)</span><br><span class="line">y1 = data_china[<span class="string">'确诊'</span>].iloc[<span class="number">2</span>::]   <span class="comment"># 设置y1轴 - 确诊病例</span></span><br><span class="line">y2 = data_china[<span class="string">'疑似'</span>].iloc[<span class="number">2</span>::]   <span class="comment"># 设置y2轴 - 疑似病例</span></span><br><span class="line">y3 = data_china[<span class="string">'确诊率'</span>].iloc[<span class="number">2</span>::]   <span class="comment"># 设置y3轴 - 确诊率</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制柱状图</span></span><br><span class="line">bar = pe.Bar(<span class="string">'每日确诊率变化情况'</span>)</span><br><span class="line">bar.add(<span class="string">'确诊病例'</span>, x, y1, is_datazoom_show = <span class="literal">True</span>, datazoom_range = [<span class="number">0</span>,<span class="number">100</span>])</span><br><span class="line">bar.add(<span class="string">'疑似病例'</span>, x, y2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制折线图</span></span><br><span class="line">line = pe.Line(<span class="string">'确诊率 折线图'</span>)</span><br><span class="line">line.add(<span class="string">'确诊率'</span>, x, y3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并图表</span></span><br><span class="line">overlap = pe.Overlap()</span><br><span class="line">overlap.add(bar)</span><br><span class="line">overlap.add(line, yaxis_index=<span class="number">1</span>, is_add_yaxis=<span class="literal">True</span>)  <span class="comment"># 新增y轴</span></span><br><span class="line">overlap</span><br></pre></td></tr></table></figure>

<p>输出结果为</p>
<div id="echarts7896" style="width: 81%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts7896'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "\u6bcf\u65e5\u786e\u8bca\u7387\u53d8\u5316\u60c5\u51b5",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "toolbox": {
        "show": true,
        "orient": "vertical",
        "left": "95%",
        "top": "center",
        "feature": {
            "saveAsImage": {
                "show": true,
                "title": "save as image"
            },
            "restore": {
                "show": true,
                "title": "restore"
            },
            "dataView": {
                "show": true,
                "title": "data view"
            }
        }
    },
    "series_id": 6759913,
    "tooltip": {
        "trigger": "item",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "line"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "bar",
            "name": "\u786e\u8bca\u75c5\u4f8b",
            "data": [
                1297.0,
                1985.0,
                2761.0,
                4533.0,
                5995.0,
                7736.0,
                9720.0,
                11821.0,
                14411.0,
                17238.0,
                20471.0,
                24363.0,
                28060.0,
                31211.0,
                34598.0,
                37251.0,
                40235.0,
                42708.0,
                44730.0,
                59882.0,
                63932.0
            ],
            "barCategoryGap": "20%",
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 6759913
        },
        {
            "type": "bar",
            "name": "\u7591\u4f3c\u75c5\u4f8b",
            "data": [
                1965.0,
                2684.0,
                5794.0,
                6973.0,
                9239.0,
                12167.0,
                15238.0,
                17988.0,
                19544.0,
                21558.0,
                23214.0,
                23260.0,
                24702.0,
                26359.0,
                27657.0,
                28942.0,
                23589.0,
                21675.0,
                16067.0,
                13435.0,
                10109.0
            ],
            "barCategoryGap": "20%",
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 6759913
        },
        {
            "type": "line",
            "name": "\u786e\u8bca\u7387",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": false,
            "step": false,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-24",
                    1.18
                ],
                [
                    "2020-01-25",
                    0.64
                ],
                [
                    "2020-01-26",
                    0.39
                ],
                [
                    "2020-01-27",
                    0.66
                ],
                [
                    "2020-01-28",
                    0.25
                ],
                [
                    "2020-01-29",
                    0.25
                ],
                [
                    "2020-01-30",
                    0.21
                ],
                [
                    "2020-01-31",
                    0.17
                ],
                [
                    "2020-02-01",
                    0.17
                ],
                [
                    "2020-02-02",
                    0.16
                ],
                [
                    "2020-02-03",
                    0.17
                ],
                [
                    "2020-02-04",
                    0.18
                ],
                [
                    "2020-02-05",
                    0.16
                ],
                [
                    "2020-02-06",
                    0.14
                ],
                [
                    "2020-02-07",
                    0.14
                ],
                [
                    "2020-02-08",
                    0.1
                ],
                [
                    "2020-02-09",
                    0.11
                ],
                [
                    "2020-02-10",
                    0.09
                ],
                [
                    "2020-02-11",
                    0.09
                ],
                [
                    "2020-02-12",
                    0.7
                ],
                [
                    "2020-02-13",
                    0.25
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 6759913,
            "xAxisIndex": 0,
            "yAxisIndex": 1
        }
    ],
    "legend": [
        {
            "data": [
                "\u786e\u8bca\u75c5\u4f8b",
                "\u7591\u4f3c\u75c5\u4f8b",
                "\u786e\u8bca\u7387"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "center",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "category",
            "splitLine": {
                "show": false
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            },
            "data": [
                "2020-01-24",
                "2020-01-25",
                "2020-01-26",
                "2020-01-27",
                "2020-01-28",
                "2020-01-29",
                "2020-01-30",
                "2020-01-31",
                "2020-02-01",
                "2020-02-02",
                "2020-02-03",
                "2020-02-04",
                "2020-02-05",
                "2020-02-06",
                "2020-02-07",
                "2020-02-08",
                "2020-02-09",
                "2020-02-10",
                "2020-02-11",
                "2020-02-12",
                "2020-02-13"
            ]
        }
    ],
    "yAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        },
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ],
    "dataZoom": [
        {
            "show": true,
            "type": "slider",
            "start": 0,
            "end": 100,
            "orient": "horizontal"
        }
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>


<p>本章如上，快快练习一下吧！</p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
  </entry>
  <entry>
    <title>一种城市-苏州</title>
    <url>/2020/001-sy/</url>
    <content><![CDATA[<p>苏州，古之城，山水之间，历史与记忆，文化与价值，我们通过影像记录着一切。</p>
<h2 id="航拍一："><a href="#航拍一：" class="headerlink" title="航拍一："></a>航拍一：</h2><p>2019年古城调研所拍</p>
<img src="/2020/001-sy/1.jpg" class="" title="图1">
<a id="more"></a>

<img src="/2020/001-sy/2.jpg" class="" title="图2">
<img src="/2020/001-sy/3.jpg" class="" title="图3">]]></content>
      <categories>
        <category>摄影记录</category>
      </categories>
  </entry>
  <entry>
    <title>新冠病毒疫情分析学习04-累计确诊病例走势</title>
    <url>/2020/004-xg/</url>
    <content><![CDATA[<h1 id="累计确诊病例走势"><a href="#累计确诊病例走势" class="headerlink" title="累计确诊病例走势"></a>累计确诊病例走势</h1><p>这章将使用交互图表工具<code>pyechats</code>来制作动态图表，LETS GO!</p>
<p>首先依然是准备数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment"># 设置不弹出警告</span></span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">'*/*/data_ncov.xlsx'</span>)</span><br><span class="line"><span class="comment">#记得修改自己的文件路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间序列转换</span></span><br><span class="line">df[<span class="string">'date'</span>] = df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)     <span class="comment"># 先将字段转化为字符串</span></span><br><span class="line">df[<span class="string">'date'</span>] = pd.to_datetime(df[<span class="string">'date'</span>])   <span class="comment"># 再进行时间序列转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取全国数据</span></span><br><span class="line">data_china = df.groupby(<span class="string">'date'</span>)[[<span class="string">'疑似'</span>,<span class="string">'确诊'</span>,<span class="string">'死亡'</span>]].sum()</span><br><span class="line">data_china.head()</span><br></pre></td></tr></table></figure>

<h2 id="按天计算每日新增数据"><a href="#按天计算每日新增数据" class="headerlink" title="按天计算每日新增数据"></a>按天计算每日新增数据</h2><p>目前提取的<em>全国数据的确诊、疑似及死亡病例</em>都是累计数据，我们需要按天计算每日新增数据，计算逻辑如下：</p>
<ul>
<li>今日新增确诊病例 = 今日确诊病例 - 昨日确诊病例</li>
<li>今日新增疑似病例 = 今日疑似病例 - 昨日疑似病例</li>
<li>今日新增死亡病例 = 今日死亡病例 - 昨日死亡病例</li>
</ul>
<a id="more"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 举例1</span></span><br><span class="line"><span class="comment"># 按天计算每日新增数据</span></span><br><span class="line">data_china[<span class="string">'疑似新增'</span>] = data_china[<span class="string">'疑似'</span>] - data_china[<span class="string">'疑似'</span>].shift()</span><br><span class="line">data_china[<span class="string">'确诊新增'</span>] = data_china[<span class="string">'确诊'</span>] - data_china[<span class="string">'确诊'</span>].shift()</span><br><span class="line">data_china[<span class="string">'死亡新增'</span>] = data_china[<span class="string">'死亡'</span>] - data_china[<span class="string">'死亡'</span>].shift()</span><br><span class="line"></span><br><span class="line">data_china.head()</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<table>
<thead>
<tr>
<th align="center">date</th>
<th align="center">疑似</th>
<th align="center">确诊</th>
<th align="center">死亡</th>
<th align="center">疑似新增</th>
<th align="center">确诊新增</th>
<th align="center">死亡新增</th>
</tr>
</thead>
<tbody><tr>
<td align="center">2020-01-22</td>
<td align="center">393</td>
<td align="center">574</td>
<td align="center">17</td>
<td align="center">NaN</td>
<td align="center">NaN</td>
<td align="center">NaN</td>
</tr>
<tr>
<td align="center">2020-01-23</td>
<td align="center">1072</td>
<td align="center">835</td>
<td align="center">25</td>
<td align="center">679.0</td>
<td align="center">261.0</td>
<td align="center">8.0</td>
</tr>
<tr>
<td align="center">2020-01-24</td>
<td align="center">1965</td>
<td align="center">1297</td>
<td align="center">41</td>
<td align="center">893.0</td>
<td align="center">462.0</td>
<td align="center">16.0</td>
</tr>
<tr>
<td align="center">2020-01-25</td>
<td align="center">2684</td>
<td align="center">1985</td>
<td align="center">56</td>
<td align="center">719.0</td>
<td align="center">688.0</td>
<td align="center">15.0</td>
</tr>
<tr>
<td align="center">2020-01-26</td>
<td align="center">5794</td>
<td align="center">2761</td>
<td align="center">80</td>
<td align="center">3110.0</td>
<td align="center">776.0</td>
<td align="center">24.0</td>
</tr>
</tbody></table>
<hr>
<p><strong>知识点</strong></p>
<blockquote>
<p><code>pandas.DataFrame.shift()</code>，将数据移动指定的位数，默认往前移动1位，如需移动2位则为<code>data_china[&#39;疑似&#39;].shift(2)</code></p>
</blockquote>
<blockquote>
<p><code>NaN</code>，空值结果，由于第一条数据往前无法移动，则返回空值<code>NaN</code>，而任何与NaN有关的计算结果均为<code>NaN</code>，所以上述代码输出结果中的第一条数据的新增字段都为<code>NaN</code></p>
</blockquote>
<hr>
<h2 id="计算确诊病例增长率"><a href="#计算确诊病例增长率" class="headerlink" title="计算确诊病例增长率"></a>计算确诊病例增长率</h2><p><em>确诊病例增长率</em>计算逻辑如下：</p>
<ul>
<li>今日确诊病例增长率 = 今日新增确诊病例 / 昨日确诊病例</li>
</ul>
<p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 计算确诊病例增长率</span></span><br><span class="line">data_china[<span class="string">'确诊_增长率'</span>] = data_china[<span class="string">'确诊新增'</span>] / data_china[<span class="string">'确诊'</span>].shift()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保留3位小数</span></span><br><span class="line">data_china[<span class="string">'确诊_增长率'</span>] = data_china[<span class="string">'确诊_增长率'</span>].round(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">data_china.head()</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<table>
<thead>
<tr>
<th align="center">date</th>
<th align="center">疑似</th>
<th align="center">确诊</th>
<th align="center">死亡</th>
<th align="center">疑似新增</th>
<th align="center">确诊新增</th>
<th align="center">死亡新增</th>
<th align="center">确诊_增长率</th>
</tr>
</thead>
<tbody><tr>
<td align="center">2020-01-22</td>
<td align="center">393</td>
<td align="center">574</td>
<td align="center">17</td>
<td align="center">NaN</td>
<td align="center">NaN</td>
<td align="center">NaN</td>
<td align="center">NaN</td>
</tr>
<tr>
<td align="center">2020-01-23</td>
<td align="center">1072</td>
<td align="center">835</td>
<td align="center">25</td>
<td align="center">679.0</td>
<td align="center">261.0</td>
<td align="center">8.0</td>
<td align="center">0.455</td>
</tr>
<tr>
<td align="center">2020-01-24</td>
<td align="center">1965</td>
<td align="center">1297</td>
<td align="center">41</td>
<td align="center">893.0</td>
<td align="center">462.0</td>
<td align="center">16.0</td>
<td align="center">0.553</td>
</tr>
<tr>
<td align="center">2020-01-25</td>
<td align="center">2684</td>
<td align="center">1985</td>
<td align="center">56</td>
<td align="center">719.0</td>
<td align="center">688.0</td>
<td align="center">15.0</td>
<td align="center">0.530</td>
</tr>
<tr>
<td align="center">2020-01-26</td>
<td align="center">5794</td>
<td align="center">2761</td>
<td align="center">80</td>
<td align="center">3110.0</td>
<td align="center">776.0</td>
<td align="center">24.0</td>
<td align="center">0.391</td>
</tr>
</tbody></table>
<hr>
<p><strong>知识点</strong></p>
<blockquote>
<p><code>pandas.DataFrame.round()</code>，用于设置小数点位数，默认四舍五入</p>
</blockquote>
<hr>
<h2 id="绘制累计确诊病例动态图表"><a href="#绘制累计确诊病例动态图表" class="headerlink" title="绘制累计确诊病例动态图表"></a>绘制累计确诊病例动态图表</h2><p>接下来我们要用一个新的工具包来绘制动态图表了 —— <em>pyecharts</em>！</p>
<p>Echarts.js是一个由百度开源的基于JavaScript的数据可视化工具库，凭借着良好的交互性，精巧的图表设计，得到了众多开发者的认可。而 Python 是一门富有表达力的语言，很适合用于数据处理。当数据分析遇上数据可视化时。pyecharts 诞生了。</p>
<p>pyecharts的特性包括：</p>
<ul>
<li>简洁的 API 设计，使用如丝滑般流畅，支持链式调用</li>
<li>囊括了 30+ 种常见图表，应有尽有</li>
<li>支持主流 Notebook 环境，Jupyter Notebook 和 JupyterLab</li>
<li>可轻松集成至 Flask，Django 等主流 Web 框架</li>
<li>高度灵活的配置项，可轻松搭配出精美的图表</li>
<li>详细的文档和示例，帮助开发者更快的上手项目</li>
<li>多达 400+ 地图文件以及原生的百度地图，为地理数据可视化提供强有力的支持</li>
</ul>
<p>这里使用的是pyechartsV0.5.X的版本，可以PIP直接安装0.5的版本</p>
<p>绘制代码如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制累计确诊病例动态图表</span></span><br><span class="line"><span class="comment"># 导入pyecharts工具包，用pe作为简写</span></span><br><span class="line"><span class="keyword">import</span> pyecharts <span class="keyword">as</span> pe  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建柱状图对象</span></span><br><span class="line">bar = pe.Bar(<span class="string">'累计确诊病例 柱状图'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x轴 - 日期，这里由于第1条数据有空值，故从第2条开始</span></span><br><span class="line"><span class="comment"># 这里是绘图阶段，x尽量用字符串</span></span><br><span class="line">x = data_china.iloc[<span class="number">1</span>::].index.astype(<span class="string">'str'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置y轴 - 确诊病例</span></span><br><span class="line">y = data_china[<span class="string">'确诊'</span>].iloc[<span class="number">1</span>::]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制图表</span></span><br><span class="line">bar.add(<span class="string">'确诊病例'</span>, x, y, </span><br><span class="line">        is_datazoom_show = <span class="literal">True</span>, datazoom_range = [<span class="number">0</span>,<span class="number">100</span>], </span><br><span class="line">        tooltip_trigger = <span class="string">'axis'</span>)</span><br><span class="line">bar</span><br></pre></td></tr></table></figure>

<p>输出结果为（可通过鼠标点击或者拖动改变日期区间哦）：</p>
<div id="echarts7069" style="width: 81%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts7069'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "\u7d2f\u8ba1\u786e\u8bca\u75c5\u4f8b \u67f1\u72b6\u56fe",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "toolbox": {
        "show": true,
        "orient": "vertical",
        "left": "95%",
        "top": "center",
        "feature": {
            "saveAsImage": {
                "show": true,
                "title": "save as image"
            },
            "restore": {
                "show": true,
                "title": "restore"
            },
            "dataView": {
                "show": true,
                "title": "data view"
            }
        }
    },
    "series_id": 4506439,
    "tooltip": {
        "trigger": "axis",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "line"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "bar",
            "name": "\u786e\u8bca\u75c5\u4f8b",
            "data": [
                835.0,
                1297.0,
                1985.0,
                2761.0,
                4533.0,
                5995.0,
                7736.0,
                9720.0,
                11821.0,
                14411.0,
                17238.0,
                20471.0,
                24363.0,
                28060.0,
                31211.0,
                34598.0,
                37251.0,
                40235.0,
                42708.0,
                44730.0,
                59882.0,
                63932.0
            ],
            "barCategoryGap": "20%",
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 4506439
        }
    ],
    "legend": [
        {
            "data": [
                "\u786e\u8bca\u75c5\u4f8b"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "center",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "category",
            "splitLine": {
                "show": false
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            },
            "data": [
                "2020-01-23",
                "2020-01-24",
                "2020-01-25",
                "2020-01-26",
                "2020-01-27",
                "2020-01-28",
                "2020-01-29",
                "2020-01-30",
                "2020-01-31",
                "2020-02-01",
                "2020-02-02",
                "2020-02-03",
                "2020-02-04",
                "2020-02-05",
                "2020-02-06",
                "2020-02-07",
                "2020-02-08",
                "2020-02-09",
                "2020-02-10",
                "2020-02-11",
                "2020-02-12",
                "2020-02-13"
            ]
        }
    ],
    "yAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ],
    "dataZoom": [
        {
            "show": true,
            "type": "slider",
            "start": 0,
            "end": 100,
            "orient": "horizontal"
        }
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>

<hr>
<p><strong>知识点</strong></p>
<blockquote>
<p><code>data_china.iloc[1::]</code>，这里<code>iloc[1::]</code>的写法代表从第2条开始到最后一条数据</p>
</blockquote>
<blockquote>
<p><code>data_china.iloc[1::].index.astype(&#39;str&#39;)</code>，在对数据进行<code>groupby(&#39;date&#39;).sum()</code>分组计算后，会自动将<code>date</code>字段设置成新数据的<code>index</code>，所以这里需要将<code>index</code>转化为<code>str</code></p>
</blockquote>
<blockquote>
<p>用pyecharts绘图的基本节奏</p>
</blockquote>
<blockquote>
<ul>
<li>设置绘图对象<code>bar = pe.Bar(&#39;累计确诊病例 柱状图&#39;)</code></li>
<li>设置数据<code>x、y</code></li>
<li>用绘图对象<code>bar.add()</code>的方法将数据加载进表格</li>
<li>输出图表</li>
</ul>
</blockquote>
<blockquote>
<p><code>bar.add()</code>的参数解释：</p>
</blockquote>
<blockquote>
<ul>
<li>‘确诊病例’，第1个参数是用于对应图例名称</li>
<li><code>is_datazoom_show = True</code> / <code>datazoom_range = [0,100]</code>分别用于设置数据筛选条，这两个参数是可选的，这里由于横坐标是日期，字体内容较长，添加筛选条后方便用户和图表进行交互</li>
<li><code>tooltip_trigger = &#39;axis&#39;</code>，用于设置提示弹框触发类型，支持3种情况：<code>axis</code>、<code>item</code>、<code>none</code>.</li>
</ul>
</blockquote>
<h2 id="绘制累确诊病例增长率动态图表"><a href="#绘制累确诊病例增长率动态图表" class="headerlink" title="绘制累确诊病例增长率动态图表"></a>绘制累确诊病例增长率动态图表</h2><p>我们基于确诊病例增长率字段，绘制累计确诊病例增长率动态图表，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制累确诊病例增长率动态图表</span></span><br><span class="line"><span class="comment"># 创建折线图对象</span></span><br><span class="line">line = pe.Line(<span class="string">'累计确诊病例增长率 折线图'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置x、y轴</span></span><br><span class="line">x = data_china.iloc[<span class="number">1</span>::].index.astype(<span class="string">'str'</span>)</span><br><span class="line">y = data_china[<span class="string">'确诊_增长率'</span>].iloc[<span class="number">1</span>::]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制图表</span></span><br><span class="line">line.add(<span class="string">'增长率'</span>, x, y, is_smooth = <span class="literal">True</span>, </span><br><span class="line">            tooltip_trigger = <span class="string">'axis'</span>, tooltip_axispointer_type = <span class="string">'cross'</span>)</span><br><span class="line">line</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<div id="echarts7112" style="width: 81%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts7112'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "\u7d2f\u8ba1\u786e\u8bca\u75c5\u4f8b\u589e\u957f\u7387 \u6298\u7ebf\u56fe",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "toolbox": {
        "show": true,
        "orient": "vertical",
        "left": "95%",
        "top": "center",
        "feature": {
            "saveAsImage": {
                "show": true,
                "title": "save as image"
            },
            "restore": {
                "show": true,
                "title": "restore"
            },
            "dataView": {
                "show": true,
                "title": "data view"
            }
        }
    },
    "series_id": 2240501,
    "tooltip": {
        "trigger": "axis",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "cross"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "line",
            "name": "\u589e\u957f\u7387",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": true,
            "step": false,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-23",
                    0.455
                ],
                [
                    "2020-01-24",
                    0.553
                ],
                [
                    "2020-01-25",
                    0.53
                ],
                [
                    "2020-01-26",
                    0.391
                ],
                [
                    "2020-01-27",
                    0.642
                ],
                [
                    "2020-01-28",
                    0.323
                ],
                [
                    "2020-01-29",
                    0.29
                ],
                [
                    "2020-01-30",
                    0.256
                ],
                [
                    "2020-01-31",
                    0.216
                ],
                [
                    "2020-02-01",
                    0.219
                ],
                [
                    "2020-02-02",
                    0.196
                ],
                [
                    "2020-02-03",
                    0.188
                ],
                [
                    "2020-02-04",
                    0.19
                ],
                [
                    "2020-02-05",
                    0.152
                ],
                [
                    "2020-02-06",
                    0.112
                ],
                [
                    "2020-02-07",
                    0.109
                ],
                [
                    "2020-02-08",
                    0.077
                ],
                [
                    "2020-02-09",
                    0.08
                ],
                [
                    "2020-02-10",
                    0.061
                ],
                [
                    "2020-02-11",
                    0.047
                ],
                [
                    "2020-02-12",
                    0.339
                ],
                [
                    "2020-02-13",
                    0.068
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 2240501
        }
    ],
    "legend": [
        {
            "data": [
                "\u589e\u957f\u7387"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "center",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "category",
            "splitLine": {
                "show": false
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            },
            "data": [
                "2020-01-23",
                "2020-01-24",
                "2020-01-25",
                "2020-01-26",
                "2020-01-27",
                "2020-01-28",
                "2020-01-29",
                "2020-01-30",
                "2020-01-31",
                "2020-02-01",
                "2020-02-02",
                "2020-02-03",
                "2020-02-04",
                "2020-02-05",
                "2020-02-06",
                "2020-02-07",
                "2020-02-08",
                "2020-02-09",
                "2020-02-10",
                "2020-02-11",
                "2020-02-12",
                "2020-02-13"
            ]
        }
    ],
    "yAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>

<hr>
<p><strong>知识点</strong></p>
<blockquote>
<p><code>line.add()</code>的参数解释：</p>
<ul>
<li><code>is_smooth=True</code>用于设置折线是否平滑，是可选参数</li>
<li><code>tooltip_axispointer_type = &#39;cross&#39;</code>用于设置指示器类型，支持3种情况：<code>&#39;line&#39;、&#39;shadow&#39;、&#39;cross&#39;</code></li>
</ul>
</blockquote>
<hr>
<h2 id="如何合并多个图表？"><a href="#如何合并多个图表？" class="headerlink" title="如何合并多个图表？"></a>如何合并多个图表？</h2><p>代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 合并图表</span></span><br><span class="line"><span class="comment"># 设置x、y轴数据</span></span><br><span class="line">x = data_china.iloc[<span class="number">1</span>::].index.astype(<span class="string">'str'</span>)</span><br><span class="line">y1 = data_china[<span class="string">'确诊'</span>].iloc[<span class="number">1</span>::]   <span class="comment"># 设置y1轴 - 确诊病例</span></span><br><span class="line">y2 = data_china[<span class="string">'确诊_增长率'</span>].iloc[<span class="number">1</span>::]   <span class="comment"># 设置y2轴 - 确诊增长率</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制柱状图</span></span><br><span class="line">bar = pe.Bar(<span class="string">'累计确诊病例走势'</span>)</span><br><span class="line">bar.add(<span class="string">'确诊病例'</span>, x, y1,</span><br><span class="line">         is_datazoom_show = <span class="literal">True</span>, datazoom_range = [<span class="number">0</span>,<span class="number">100</span>], </span><br><span class="line">         tooltip_trigger = <span class="string">'axis'</span>, tooltip_axispointer_type = <span class="string">'cross'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制折线图</span></span><br><span class="line">line = pe.Line(<span class="string">'累计确诊病例增长率 折线图'</span>)</span><br><span class="line">line.add(<span class="string">'增长率'</span>, x, y2, is_smooth=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并图表</span></span><br><span class="line">overlap = pe.Overlap()</span><br><span class="line">overlap.add(bar)</span><br><span class="line">overlap.add(line, </span><br><span class="line">            yaxis_index=<span class="number">1</span>, is_add_yaxis=<span class="literal">True</span>)  <span class="comment"># 新增y轴</span></span><br><span class="line">overlap</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<div id="echarts5563" style="width: 81%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts5563'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "\u7d2f\u8ba1\u786e\u8bca\u75c5\u4f8b\u8d70\u52bf",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "toolbox": {
        "show": true,
        "orient": "vertical",
        "left": "95%",
        "top": "center",
        "feature": {
            "saveAsImage": {
                "show": true,
                "title": "save as image"
            },
            "restore": {
                "show": true,
                "title": "restore"
            },
            "dataView": {
                "show": true,
                "title": "data view"
            }
        }
    },
    "series_id": 3973750,
    "tooltip": {
        "trigger": "axis",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "cross"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "bar",
            "name": "\u786e\u8bca\u75c5\u4f8b",
            "data": [
                835.0,
                1297.0,
                1985.0,
                2761.0,
                4533.0,
                5995.0,
                7736.0,
                9720.0,
                11821.0,
                14411.0,
                17238.0,
                20471.0,
                24363.0,
                28060.0,
                31211.0,
                34598.0,
                37251.0,
                40235.0,
                42708.0,
                44730.0,
                59882.0,
                63932.0
            ],
            "barCategoryGap": "20%",
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 3973750
        },
        {
            "type": "line",
            "name": "\u589e\u957f\u7387",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": true,
            "step": false,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-23",
                    0.455
                ],
                [
                    "2020-01-24",
                    0.553
                ],
                [
                    "2020-01-25",
                    0.53
                ],
                [
                    "2020-01-26",
                    0.391
                ],
                [
                    "2020-01-27",
                    0.642
                ],
                [
                    "2020-01-28",
                    0.323
                ],
                [
                    "2020-01-29",
                    0.29
                ],
                [
                    "2020-01-30",
                    0.256
                ],
                [
                    "2020-01-31",
                    0.216
                ],
                [
                    "2020-02-01",
                    0.219
                ],
                [
                    "2020-02-02",
                    0.196
                ],
                [
                    "2020-02-03",
                    0.188
                ],
                [
                    "2020-02-04",
                    0.19
                ],
                [
                    "2020-02-05",
                    0.152
                ],
                [
                    "2020-02-06",
                    0.112
                ],
                [
                    "2020-02-07",
                    0.109
                ],
                [
                    "2020-02-08",
                    0.077
                ],
                [
                    "2020-02-09",
                    0.08
                ],
                [
                    "2020-02-10",
                    0.061
                ],
                [
                    "2020-02-11",
                    0.047
                ],
                [
                    "2020-02-12",
                    0.339
                ],
                [
                    "2020-02-13",
                    0.068
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 3973750,
            "xAxisIndex": 0,
            "yAxisIndex": 1
        }
    ],
    "legend": [
        {
            "data": [
                "\u786e\u8bca\u75c5\u4f8b",
                "\u589e\u957f\u7387"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "center",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "category",
            "splitLine": {
                "show": false
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            },
            "data": [
                "2020-01-23",
                "2020-01-24",
                "2020-01-25",
                "2020-01-26",
                "2020-01-27",
                "2020-01-28",
                "2020-01-29",
                "2020-01-30",
                "2020-01-31",
                "2020-02-01",
                "2020-02-02",
                "2020-02-03",
                "2020-02-04",
                "2020-02-05",
                "2020-02-06",
                "2020-02-07",
                "2020-02-08",
                "2020-02-09",
                "2020-02-10",
                "2020-02-11",
                "2020-02-12",
                "2020-02-13"
            ]
        }
    ],
    "yAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        },
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ],
    "dataZoom": [
        {
            "show": true,
            "type": "slider",
            "start": 0,
            "end": 100,
            "orient": "horizontal"
        }
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>

<hr>
<p><strong>知识点</strong></p>
<blockquote>
<p>共用的参数在第1张图表设置即可，例如<code>is_datazoom_show</code>、<code>datazoom_range</code>、<code>tooltip_trigger</code><br>合并图表需要调用<code>pe.Overlap</code>对象，然后用<code>pe.Overlap.add</code>分别添加几个图表</p>
<ul>
<li>如果需要新增y轴，需要同时设置<code>yaxis_index=1</code>, <code>is_add_yaxis=True</code>两个参数</li>
</ul>
</blockquote>
<hr>
<h2 id="PANDA与PYECHARTS的绘图区别"><a href="#PANDA与PYECHARTS的绘图区别" class="headerlink" title="PANDA与PYECHARTS的绘图区别"></a>PANDA与PYECHARTS的绘图区别</h2><p>pandas的内置方法，绘图会更快；而pyecharts由于更偏向数据展示，并且有交互功能，所以参数设置上会更复杂。</p>
<p>实际场景下的复杂数据分析需求，数据分析阶段尽可能的用pandas，在最后结果已定的情况下，再用pyecharts绘制可交互图表！</p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
  </entry>
  <entry>
    <title>新冠病毒疫情分析学习03-快速查看不同省市疫情现状</title>
    <url>/2020/003-xg/</url>
    <content><![CDATA[<h1 id="快速查看不同省市疫情现状"><a href="#快速查看不同省市疫情现状" class="headerlink" title="快速查看不同省市疫情现状"></a>快速查看不同省市疫情现状</h1><p>这篇将开始用python做第一张可视化图表啦！</p>
<p>首先依然是准备数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment"># 设置不弹出警告</span></span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">'*/*/data_ncov.xlsx'</span>)</span><br><span class="line"><span class="comment">#记得修改自己的文件路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间序列转换</span></span><br><span class="line">df[<span class="string">'date'</span>] = df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)     <span class="comment"># 先将字段转化为字符串</span></span><br><span class="line">df[<span class="string">'date'</span>] = pd.to_datetime(df[<span class="string">'date'</span>])   <span class="comment"># 再进行时间序列转换</span></span><br></pre></td></tr></table></figure>


<h2 id="如何做数据排序？"><a href="#如何做数据排序？" class="headerlink" title="如何做数据排序？"></a>如何做数据排序？</h2><p>首先提取<code>2020-2-1</code>的数据，以确诊字段做排序，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 提取2020-2-1日的数据</span></span><br><span class="line">data_0201 = df[df[<span class="string">'date'</span>] == <span class="string">'2020-2-1'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line">data_0201.sort_values(by=<span class="string">'确诊'</span>, ascending=<span class="literal">False</span>, inplace = <span class="literal">True</span>)</span><br><span class="line">data_0201.head()</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>输出结果如下：</p>
<table>
<thead>
<tr>
<th align="center">区域编码</th>
<th align="center">省市</th>
<th align="center">疑似</th>
<th align="center">确诊</th>
<th align="center">死亡</th>
<th align="center">date</th>
</tr>
</thead>
<tbody><tr>
<td align="center">420000</td>
<td align="center">湖北省</td>
<td align="center">14872</td>
<td align="center">9074</td>
<td align="center">294</td>
<td align="center">2020-02-01</td>
</tr>
<tr>
<td align="center">330000</td>
<td align="center">浙江省</td>
<td align="center">207</td>
<td align="center">661</td>
<td align="center">0</td>
<td align="center">2020-02-01</td>
</tr>
<tr>
<td align="center">440000</td>
<td align="center">广东省</td>
<td align="center">157</td>
<td align="center">604</td>
<td align="center">0</td>
<td align="center">2020-02-01</td>
</tr>
<tr>
<td align="center">410000</td>
<td align="center">河南省</td>
<td align="center">754</td>
<td align="center">493</td>
<td align="center">2</td>
<td align="center">2020-02-01</td>
</tr>
<tr>
<td align="center">430000</td>
<td align="center">湖南省</td>
<td align="center">434</td>
<td align="center">463</td>
<td align="center">0</td>
<td align="center">2020-02-01</td>
</tr>
</tbody></table>
<hr>
<p><strong>知识点</strong><br><code>pandas.DataFrame.sort_values()</code>，用于排序，这几个参数需要大家学习一下</p>
<p><code>by = &#39;确诊&#39;</code>，设置排序字段</p>
<p><code>ascending = False</code>，设置排序方向，True为从小到大排序(默认)、<code>False</code>为从大到小排序</p>
<p><code>inplace = True</code>，设置是否代替原始数据，一般有2种写法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用inplace参数</span></span><br><span class="line">data_0201.sort_values(by=<span class="string">'确诊'</span>, ascending=<span class="literal">False</span>, inplace = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不使用inplace参数</span></span><br><span class="line">data_0201 = data_0201.sort_values(by=<span class="string">'确诊'</span>, ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="绘制柱状图"><a href="#绘制柱状图" class="headerlink" title="绘制柱状图"></a>绘制柱状图</h2><p>这里可以通过柱状图来表达结论，使用<code>pandas.DataFrame.plot()</code>完成制图，这是pandas的画图功能，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 绘制2020-2-1日全国确诊病例top10的省市(非湖北省) - 柱状图</span></span><br><span class="line">data_0201.iloc[<span class="number">1</span>:<span class="number">11</span>].plot(x = <span class="string">'省市'</span>, y =<span class="string">'确诊'</span>,</span><br><span class="line">                          kind =<span class="string">'bar'</span>, figsize = (<span class="number">15</span>,<span class="number">5</span>), </span><br><span class="line">                          color =<span class="string">'r'</span>, alpha = <span class="number">0.8</span>,grid = <span class="literal">True</span>,</span><br><span class="line">                          rot = <span class="number">45</span>, title = <span class="string">'湖北省外2020.2.1日确诊病例top10省市'</span>)</span><br></pre></td></tr></table></figure>

<p>输出结果如下：</p>
<img src="/2020/003-xg/01.jpg" class="" title="图1">

<hr>
<p><strong>知识点</strong></p>
<blockquote>
<p><strong><code>df.iloc[起始索引:结束索引]</code>，另一个行索引的方法</strong></p>
</blockquote>
<ul>
<li>这里由于湖北省的确证病例太多了，为了可以更好的查看之后的top10省份，我们需要筛选第2-11条数据</li>
<li>python中第一个索引是0并不是1，即<code>data_0201.iloc[0]</code>是输出湖北省数据，<code>data_0201.iloc[10]</code>则是输出第11名的数据！</li>
<li><code>df.iloc[起始索引:结束索引]</code>是一个前闭后开的区间，所以这里如果需要筛选第2-11条数据，就应该是<code>data_0201.iloc[1:11]</code>。</li>
</ul>
<blockquote>
<p><strong><code>pandas.DataFrame.plot()</code>，用于绘制图表</strong></p>
</blockquote>
<ul>
<li>x = ‘省市’，设置横坐标</li>
<li>y = ‘确诊’，设置纵坐标，如果是多系列柱状图，则用列表表示，例如y = [‘确诊’, ‘疑似’]，在这种情况下，后续不需要设置*color参数了</li>
<li>kind = ‘bar’，设置图表类型，大家先掌握设置柱状图的方法</li>
<li>figsize = (15,5)，设置图表大小</li>
<li>color = ‘r’, alpha = 0.8，设置图表颜色及透明度</li>
<li>grid=True，设置是否显示网格线</li>
<li>rot = 45，设置横坐标标签旋转角度</li>
<li>title = ‘…’，设置图表标题</li>
</ul>
<p>下面是关于<code>color</code>的设置，作为参考</p>
<img src="/2020/003-xg/02.jpg" class="" title="color">

<hr>
<p>继续通过此方法输出一些其他图表：<br><strong>多系列柱状图</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制2020-2-1日全国确诊与疑似病例top10的省市(非湖北省) - 多系列柱状图</span></span><br><span class="line"><span class="comment"># 这里不需要设置color参数了</span></span><br><span class="line">data_0201.iloc[<span class="number">1</span>:<span class="number">11</span>].plot(x = <span class="string">'省市'</span>, y = [<span class="string">'确诊'</span>, <span class="string">'疑似'</span>],</span><br><span class="line">                          kind =<span class="string">'bar'</span>, figsize = (<span class="number">15</span>,<span class="number">5</span>), grid = <span class="literal">True</span>,   </span><br><span class="line">                          rot = <span class="number">45</span>, title = <span class="string">'湖北省外2020.2.1日确诊与疑似病例top10省市'</span>)</span><br></pre></td></tr></table></figure>

<img src="/2020/003-xg/03.jpg" class="" title="多系列柱状图">


<p><strong>多系列条形图</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 绘制2020-2-1日全国确诊与疑似病例top10的省市(非湖北省) - 多系列条形图</span></span><br><span class="line"><span class="comment"># 这里不需要设置color参数了</span></span><br><span class="line">data_0201.iloc[<span class="number">1</span>:<span class="number">11</span>].plot(x = <span class="string">'省市'</span>, y = [<span class="string">'确诊'</span>, <span class="string">'疑似'</span>],</span><br><span class="line">                          kind = <span class="string">'barh'</span>, figsize = (<span class="number">15</span>,<span class="number">5</span>), grid = <span class="literal">True</span>,   </span><br><span class="line">                          title = <span class="string">'湖北省外2020.2.1日确诊与疑似病例top10省市'</span>)</span><br></pre></td></tr></table></figure>
<img src="/2020/003-xg/04.jpg" class="" title="多系列条形图">

<h2 id="通过构建函数，快速出图"><a href="#通过构建函数，快速出图" class="headerlink" title="通过构建函数，快速出图"></a>通过构建函数，快速出图</h2><p>我们来梳理一下目前的作图逻辑</p>
<ul>
<li>提取某一日的数据</li>
<li>数据排序</li>
<li>绘制图表</li>
</ul>
<p>按照这个逻辑，我们在第2点中的第一张图的需求点为：<code>2020-2-1</code>，<code>确诊</code>，<code>top10</code>，如果这3个需求能够转化为3个参数，我们就能够通过调节参数来生成不同需求的图表！</p>
<p><strong>def语句构建函数</strong></p>
<pre><code class="python"><span class="comment"># 构建函数快速出图</span>
<span class="function"><span class="keyword">def</span> <span class="title">fig1</span><span class="params">(time, tp, topn)</span>:</span>
    <span class="comment"># 数据提取</span>
    datai = df[df[<span class="string">'date'</span>]== time]
    <span class="comment"># 数据排序</span>
    datai.sort_values(by = tp, ascending=<span class="literal">False</span>, inplace = <span class="literal">True</span>)
    <span class="comment"># 绘制柱状图</span>
    datai.iloc[<span class="number">1</span>:topn+<span class="number">1</span>].plot(x = <span class="string">'省市'</span>, y = tp,
                          kind =<span class="string">'bar'</span>, figsize = (<span class="number">15</span>,<span class="number">5</span>), 
                          color =<span class="string">'r'</span>, alpha = <span class="number">0.8</span>,grid = <span class="literal">True</span>,
                          rot = <span class="number">45</span>, 
                          title = <span class="string">'湖北省外%s日%s病例最多的%i省市'</span> % (time, tp, topn))

<span class="comment"># 调用函数，设置参数出图</span>
fig1(<span class="string">'20200202'</span>, <span class="string">'疑似'</span>, <span class="number">15</span>)</code></pre>
<img src="/2020/003-xg/05.jpg" class="" title="函数构建出图">

<p>通过构建函数，后面只需输入变量参数，就可以更快的输出！</p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
  </entry>
  <entry>
    <title>城市热力图的获取及分析</title>
    <url>/2020/002-js/</url>
    <content><![CDATA[<h1 id="热力图简介"><a href="#热力图简介" class="headerlink" title="热力图简介"></a>热力图简介</h1><p>&emsp;人是城市经济活动的载体和城市化进程中最活跃的因素，人口分布空间格局对城市研究有着重要的意义，而互联网地图的热力图作为新兴的大数据产品，基于了上亿手机用户地理位置，能够对实时的人群集聚、人群分布进行可视化表达。虽然不能代替实际的人口密度数据，但一定程度还是反映出每天、每小时甚至每分钟人群在城市空间中相对集聚的位置和分布趋势，为城市研究和规划提供了全新的视角。</p>
<p>&emsp;热力图（Heat Map）是通过密度函数3进行可视化用于表示地图中点的密度的热图。</p>
<a id="more"></a>


<h1 id="数据来源"><a href="#数据来源" class="headerlink" title="数据来源"></a>数据来源</h1><p>&emsp;目前可以采集到的有百度热力图和腾讯宜出行热力图数据，两种数据源各有优缺，应对不同的需求，比如范围大小，精度要求等，选择合适数据源进行分析。</p>
<p>&emsp;<strong>百度热力图</strong>：基于获取移动端用户的定位信息（<em>手机中安装百度系APP的人群</em>），以不同颜色表达人口集聚程度的相对高低，颜色越暖则表示该区域人口分布相对密集，而越冷则说明该区域人口越稀少，通常15分钟更新一次，快速准确的反映了人口在连续时空尺度上的分布特征。</p>
<p>&emsp;<strong>腾讯宜出行</strong>：基于海量的腾讯系产品的用户定位次数信息而发布的不同区域的热力图数据，展示了不同区域的实时的定位人数，反映人群的相对集聚区和人口对的分布趋势。</p>
<h1 id="数据采集"><a href="#数据采集" class="headerlink" title="数据采集"></a>数据采集</h1><p>&emsp;<strong>百度热力图</strong>功能仅支持手机移动端使用，通过采集工具调用手机接口，可进行图示化的采集界面，设置采集范围及精度，输出格式为图片形式。采集到的热力图片需要在ArcGIS中进行处理，对热力图片进行重分类操作，即对不同颜色赋予不同的热力值（表达式如图所示），其次根据需要对热力图进行矢量化操作，将相同的热力值的栅格合并为一个矢量多边形，将热力进行分区表达。具体操作步骤如下：</p>
<ol>
<li><p>安装百度数据采集工具及PIL程序，并获得激活码（<em>付费工具，购买于公众号：规划大数据笔记，界面如图1所示</em>）</p>
<img src="/2020/002-js/02-00.png" class="" title="图1">
</li>
<li><p>获取采集范围经纬度坐标，分别是左下角和右上角坐标（<em>可通过<a href="http://api.map.baidu.com/lbsapi/getpoint/index.html" target="_blank" rel="noopener">百度坐标拾取</a>获取：</em>）</p>
</li>
<li><p>选取地图缩放级别，精度要求高选取<code>17</code>即可（<em>热力图采集不要选取18，因为最高17，底图可以选取18</em>）</p>
</li>
<li><p>根据需要选择输出坐标系、文件位置（<em>输出坐标系支持<code>WGS84、BD09、GCJ02</code>三种，输出文件类型为<code>栅格TIF</code>格式</em>）</p>
</li>
<li><p>GIS中加载下载好的热力图TIF（<em>在GIS中加载定义好坐标的百度热力图<code>第1波段、第2波段和第3波段</code>，通过图层到添加数据</em></p>
<img src="/2020/002-js/02-01.png" class="" title="图2">
</li>
<li><p>栅格热力图数据<code>重分类</code>（<em>打开栅格计算器，根据实际参数情况修改公式，默认情况下修改TIF文件名即可，如果TIF颜色没有8种，则需要进行修改公式数量，如图4所示</em>）</p>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#示例代码，按需修改</span></span><br><span class="line"></span><br><span class="line">Con((<span class="string">"17.tif - Band_1"</span> == <span class="number">205</span>) &amp; (<span class="string">"17.tif - Band_2"</span> == <span class="number">78</span>) &amp; (<span class="string">"17.tif - Band_3"</span> == <span class="number">0</span>),</span><br><span class="line"><span class="number">6</span>,Con((<span class="string">"17.tif - Band_1"</span> == <span class="number">205</span>) &amp; (<span class="string">"17.tif - Band_2"</span> == <span class="number">205</span>) &amp; (<span class="string">"17.tif - Band_3"</span> == <span class="number">0</span>),</span><br><span class="line"><span class="number">5</span>,Con((<span class="string">"17.tif - Band_1"</span> == <span class="number">0</span>) &amp; (<span class="string">"17.tif - Band_2"</span> == <span class="number">205</span>) &amp; (<span class="string">"17.tif - Band_3"</span> == <span class="number">0</span>),</span><br><span class="line"><span class="number">4</span>,Con((<span class="string">"17.tif - Band_1"</span> == <span class="number">0</span>) &amp; (<span class="string">"17.tif - Band_2"</span> == <span class="number">205</span>) &amp; (<span class="string">"17.tif - Band_3"</span> == <span class="number">205</span>),</span><br><span class="line"><span class="number">3</span>,Con((<span class="string">"17.tif - Band_1"</span> == <span class="number">0</span>) &amp; (<span class="string">"17.tif - Band_2"</span> == <span class="number">82</span>) &amp; (<span class="string">"17.tif - Band_3"</span> == <span class="number">205</span>),</span><br><span class="line"><span class="number">2</span>,Con((<span class="string">"17.tif - Band_1"</span> == <span class="number">0</span>) &amp; (<span class="string">"17.tif - Band_2"</span> == <span class="number">0</span>) &amp; (<span class="string">"17.tif - Band_3"</span> == <span class="number">205</span>),</span><br><span class="line"><span class="number">1</span>,<span class="number">0</span>))))))</span><br></pre></td></tr></table></figure>

<img src="/2020/002-js/02-03.png" class="" title="图4">

<ol start="7">
<li><p>输出结果进行矢量化（<em>调用GIS的栅格转面工具</em>）</p>
</li>
<li><p>叠加规划区底图，以进行后续分析（<em>如图5所示</em>）</p>
<img src="/2020/002-js/02-04.png" class="" title="图5">


</li>
</ol>
<hr>
<p>&emsp;<strong>腾讯位置数据</strong>是通过微信-城市服务-城市热力图提供的数据进行采集，输出格式为csv的热力散点图，利用Python编写程序进行接口调用，范围输入，数据获取，数据整理三个部分。由于每个QQ采集数量每天有限制，需要通过多个QQ产出COOKIES，所以该方法普遍适用小范围高精度的需求，以便不断循环采集，如果需要大范围的使用，则需要大量的QQ号。这里我们使用网友分享的打包后的程序，可直接运行程序进行采集（需要主要的是，由于腾讯会不断更新系统，采集的源代码也会不断更新，由于程序是源代码打包，所以不能确保永久有效），具体步骤如下：</p>
<ol>
<li><p>打开<code>config</code>文件，进行配置，主要有QQ号及密码的输入（<em>注意格式，格式不能出错</em>），爬取的间隔时间、采集范围（<code>WGS84</code>坐标）、设置文件夹名字，最后进行保存（<em>如图1所示</em>）；</p>
<img src="/2020/002-js/02-05.png" class="" title="图1">
</li>
<li><p>安装谷歌浏览器，确保程序启动后可自动弹出；</p>
</li>
<li><p>运行<code>宜出行.exe</code>文件，程序开始运行；</p>
</li>
<li><p>采集后得到不同时间的<code>CSV</code>格式的经纬度数据表；</p>
<img src="/2020/002-js/02-06.png" class="" title="图2"></li>
<li><p>通过GIS添加XY数据（<code>File-Add Data-Add XY Data</code>），根据表头设置XY，Z无需设置，由于采集坐标系为WGS84，此处添加一个<code>地球坐标系WGS84</code>，无需设置投影坐标，数据就成功添加到GIS中了；</p>
</li>
<li><p>添加规划底图，并将点数据通过核密度分析，生成热力图。</p>
</li>
</ol>
<img src="/2020/002-js/02-07.png" class="" title="代码截图">

<hr>
<h1 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h1><p>&emsp;通过上述的流程，我们已经采集到百度热力图的多时段图片或者宜出行多时段的定位点文件了，如何运用这些数据对城市进行分析也是关键和最为重要的一步。</p>
<p>&emsp;数字时代中，多元的数据可以增强我们认知城市的能力，还能看到人们在时间中的空间选择，能看到转瞬即逝的变化是如何发生的，这也是我们获取热力数据的根本原因。在苏州城市设计中，把一周中每天6-12小时的人流集聚及波动进行判断，将这一流动与实际的物理空间对应的来看，就可能找到城市的问题，比如人为什么在一个地方集聚？那些人集聚的地方的空间载体和环境是否较差？那些看起来很好的地方为什么很少有人集聚？由此我们可以产生更多的思考，产生的原因，错位的原因等等。</p>
<p>&emsp;应对多种思考，我们分析的方向未来也将更加多元。在苏州项目中，我们分析得到场地人群活动分布特征、人群时空分布特征，进而找到规律及问题所在，并结合设计策略指引方案的生成。当然，我们针对不同的需求，叠加多种数据，还可以有更多的分析导向，比如人群分布趋势分析、人群重心变化分析、职住分析、商业区吸引力等等。</p>
<p>&emsp;种种数据联系起来，可以让我们对城市、对人有更多准确的认知，但我们始终也无法达到精准和完美的程度，因为城市和人，都是复杂的对象，但对于这个复杂对象的认知过程是有价值的，越精准，越靠近真实的过程很重要，城市设计不会有唯一解，通过对人群活动的认知，可以加快我们对城市内在场域的理解，更好的布局城市的人行视角下的空间。</p>
<hr>
<h2 id="分析思路"><a href="#分析思路" class="headerlink" title="分析思路"></a>分析思路</h2><p>1研究周末（<em>周六、周天</em>）人群活动的时间变化和空间变化规律；<br>2研究周内（<em>周一至周五</em>）人群活动的时间变化和空间变化规律；</p>
<h2 id="周末-周内人群活动的空间变化规律"><a href="#周末-周内人群活动的空间变化规律" class="headerlink" title="周末/周内人群活动的空间变化规律"></a>周末/周内人群活动的空间变化规律</h2><p>为了准确描述人群空间分布特征，利用GIS计算每一天全天规划区氛围内的聚集度<strong>平均值和标准差值</strong>。<br>热力图平均值能反映规划区域内每个点的聚集程度，平均值越大，聚集的人数越多，即聚集效应就越强；反之，聚集效应就越弱。（<em>如图1所示</em>）</p>
<img src="/2020/002-js/02-08.png" class="" title="热力平均值">
<img src="/2020/002-js/02-09.png" class="" title="主要集聚区域">

<p><em>图1：周一人群活动的热力平均值及主要集聚区域</em></p>
<p>&emsp;热力图标准差反映了每个点的聚集程度变化。标准差越大，说明不同时间的人口变化较大，即点的聚集效应具有时效性；标准差越小，说明点的人流量变化较为平稳，则该点的功能相对复合。（<em>如图2所示</em>）</p>
<img src="/2020/002-js/02-10.png" class="" title="热力标准差值">
<img src="/2020/002-js/02-11.png" class="" title="主要集聚区域">
<p><em>图2：周一人群活动的热力标准差值及主要集聚区域</em></p>
<p>&emsp;结合分析发现规划场地呈现出了冷热不均的现象，外围的乐桥、三元坊、临顿路地铁站，以及凤凰街、十梓街、五卅路的交汇点是全天都较为活跃的区域。而片区内部则是在公园、学校、办公区、体育馆出现不同时间段的活动集聚。十梓街南部的生活片区，整体活力都较弱。</p>
<h2 id="周末-周内人群活动的时间变化规律"><a href="#周末-周内人群活动的时间变化规律" class="headerlink" title="周末/周内人群活动的时间变化规律"></a>周末/周内人群活动的时间变化规律</h2><p>&emsp;为了进一步了解各个时段的人群活动特点，可以将人群活动时间划分为7:00-11:00、11:00-14:00、14:00-20:00、20:00-00:00四个时间段（也可以是其他时间段），利用GIS工具分别计算各个时间段的热力平均值，分别进行周内与周末的叠加分析，结合调研、问卷等，以判定各时间段的人群空间分布变化。<br>&emsp;由此可以看出，在周内除去站点交通大量聚集的因素，平日白天的苏州公园是片区最具人气的场所，以老人及儿童休闲娱乐活动为主。晚间，中青年人群成为主角，人们在体育场和市民健身中心积极的开展各种运动健身项目。在周末图书馆、十全街、第一中学区域，大量年轻热人到访，阅读、交友休闲、补习、培训是他们的主要好活动。这些人群活动目的单纯、活动区域划分鲜明，更多的集中在片区外围，且不同热点之间也少有交叉互动。（<em>如图3所示</em>）</p>
<img src="/2020/002-js/02-12.png" class="" title="热力标准差值">
<img src="/2020/002-js/02-13.png" class="" title="主要集聚区域">
<p><em>图3：周一人群活动的热力标准差值及主要集聚区域</em></p>
<h1 id="研究总结"><a href="#研究总结" class="headerlink" title="研究总结"></a>研究总结</h1><p>&emsp;通过一系列的数据获取及分析，并且对分析结果进行比较可以发现，周末和工作日规划区范围内的人群分布和空间使用具有以下特点：</p>
<p>&emsp;1)    无论周内还是工作日，地铁站及道路交汇处都是最为活跃的，片区内部在不同的时间聚集，南部片区整体都较弱。<br>&emsp;2)    基于热力图的采集原理，被采集的手机数量在周末和工作日差别不会太大，但是工作日人群的大多聚集在点状区域，单位面积的人口密度就会越大，面积也就越小；反之周末人群大多聚集在线状区域、面状区域，单位面积的人口密度越小，聚集面积也就越大。同时，由于片区内老年人较多，被采集的手机数量会有一定偏差。<br>&emsp;3)    对时空差异进行分析后，可以看出周内与周末的活动地点与人群构成存在一定差异，老年人的活动时间相对集中和完整，不受时间影响，中青年的活动时间则相对分散，在周末则相对集中。</p>
<h2 id="不足之处："><a href="#不足之处：" class="headerlink" title="不足之处："></a>不足之处：</h2><p>&emsp;1)    采用了聚集度单因子进行分析，结果会与实际情况有一定的出入；<br>&emsp;2)    未对聚集面积进行统计分析，缺少一天内区域聚集面积变化的情况，从而对区域内一天中人群时间变化缺少支撑。</p>
<h2 id="未来展望："><a href="#未来展望：" class="headerlink" title="未来展望："></a>未来展望：</h2><p>&emsp;1)    结合片区用地布局、空间特色、建筑情况、文化景观等条件分析人群活动特征，进而更加合理的规划公共服务设施；<br>&emsp;2)    融合更多的开放数据，比如天气数据、PM2.5、研究不同天气情况下人群的活动特征，进而完善基础设施规划布局；<br>&emsp;3)    结合交通数据、手机信令数据综合分析人群活动特征，研究局部空间及道路的优化。</p>
<div class="note [class]">
            <p>本文部分内容摘自：<strong>规划大数据笔记</strong>、感谢作者提供这么好的工具。<br><strong>特别声明：本文原创，版权所有，转载请联系，谢谢。</strong></p>
          </div>]]></content>
      <categories>
        <category>技术分享</category>
      </categories>
  </entry>
  <entry>
    <title>新冠病毒疫情分析学习02-按日期/区域做数据提取</title>
    <url>/2020/002-xg/</url>
    <content><![CDATA[<h1 id="按日期-区域做数据提取"><a href="#按日期-区域做数据提取" class="headerlink" title="按日期/区域做数据提取"></a>按日期/区域做数据提取</h1><h2 id="什么是时间序列？"><a href="#什么是时间序列？" class="headerlink" title="什么是时间序列？"></a>什么是时间序列？</h2><p>在本次的案例数据中，有一个字段<code>date</code>记录了疫情数据记录的日期，例如我们把重庆市的数据单独拿出来看：</p>
<table>
<thead>
<tr>
<th align="center">区域编码</th>
<th align="center">省市</th>
<th align="center">疑似</th>
<th align="center">确诊</th>
<th align="center">死亡</th>
<th align="center">date</th>
</tr>
</thead>
<tbody><tr>
<td align="center">500000</td>
<td align="center">重庆市</td>
<td align="center">13</td>
<td align="center">9</td>
<td align="center">0</td>
<td align="center">20200122</td>
</tr>
<tr>
<td align="center">500000</td>
<td align="center">重庆市</td>
<td align="center">71</td>
<td align="center">27</td>
<td align="center">0</td>
<td align="center">20200123</td>
</tr>
<tr>
<td align="center">500000</td>
<td align="center">重庆市</td>
<td align="center">86</td>
<td align="center">57</td>
<td align="center">0</td>
<td align="center">20200124</td>
</tr>
<tr>
<td align="center">500000</td>
<td align="center">重庆市</td>
<td align="center">146</td>
<td align="center">75</td>
<td align="center">0</td>
<td align="center">20200125</td>
</tr>
<tr>
<td align="center">500000</td>
<td align="center">重庆市</td>
<td align="center">188</td>
<td align="center">110</td>
<td align="center">0</td>
<td align="center">20200126</td>
</tr>
<tr>
<td align="center">500000</td>
<td align="center">重庆市</td>
<td align="center">219</td>
<td align="center">132</td>
<td align="center">0</td>
<td align="center">20200127</td>
</tr>
<tr>
<td align="center">500000</td>
<td align="center">重庆市</td>
<td align="center">246</td>
<td align="center">147</td>
<td align="center">0</td>
<td align="center">20200128</td>
</tr>
<tr>
<td align="center">500000</td>
<td align="center">重庆市</td>
<td align="center">279</td>
<td align="center">165</td>
<td align="center">0</td>
<td align="center">20200129</td>
</tr>
<tr>
<td align="center">500000</td>
<td align="center">重庆市</td>
<td align="center">378</td>
<td align="center">206</td>
<td align="center">0</td>
<td align="center">20200130</td>
</tr>
<tr>
<td align="center">500000</td>
<td align="center">重庆市</td>
<td align="center">408</td>
<td align="center">238</td>
<td align="center">1</td>
<td align="center">20200131</td>
</tr>
</tbody></table>
<p>我们首先查看<code>date</code>的字段类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 举例1 </span></span><br><span class="line"><span class="comment"># 读取数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_excel(<span class="string">'$&#123;ohstudy&#125;/nCov/data_ncov.xlsx'</span>)</span><br><span class="line">	</span><br><span class="line"><span class="comment"># 查看字段类型</span></span><br><span class="line">df[<span class="string">'date'</span>].dtype</span><br></pre></td></tr></table></figure>


<p>输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dtype(<span class="string">'int64'</span>)</span><br></pre></td></tr></table></figure>


<a id="more"></a>


<hr>
<p><strong>知识点：</strong><br><code>df[&#39;date&#39;]</code>，这里是单列索引的代码写法，单列索引之后的结果为Series；<br>多列索引为<code>df[[&#39;列名1&#39;, &#39;列名2&#39;, ...]]</code>，例如<code>df[[&#39;省市&#39;,&#39;确诊&#39;,&#39;date&#39;]]</code>，多列索引之后的结果为<code>DataFrame</code></p>
<p><code>pandas.Sereis.dtype</code>，用于查看Series的数据类型<br><code>pandas.Sereis.astype()</code>，用于转换Series的数据类型，为了方便学习，大家可以先记以下3中数据类型的转换写法<br><code>df[&#39;字段名&#39;].astype(&#39;str&#39;)</code><br><code>df[&#39;字段名&#39;].astype(&#39;float&#39;)</code><br><code>df[&#39;字段名&#39;].astype(&#39;int&#39;)</code></p>
<p>字符串并不是时间信息最佳的存储方式，我们需要将其转化为时间序列数据，转化方法为：<br><code>pandas.to_datetime()</code>，作用是转化为时间序列数据</p>
<hr>
<p>具体写法如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 举例2</span></span><br><span class="line"><span class="comment"># 时间序列转换</span></span><br><span class="line">df[<span class="string">'date'</span>] = df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>)     <span class="comment"># 先将字段转化为字符串</span></span><br><span class="line">df[<span class="string">'date'</span>] = pd.to_datetime(df[<span class="string">'date'</span>])   <span class="comment"># 再进行时间序列转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次查看数据基本情况，可以看到date字段类型不再是int64</span></span><br><span class="line">df.info()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次输出前5行数据，可以看到date字段显示方式不一样了</span></span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure>

<p>输出结果为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">pandas</span>.<span class="title">core</span>.<span class="title">frame</span>.<span class="title">DataFrame</span>'&gt;</span></span><br><span class="line"><span class="class"><span class="title">RangeIndex</span>:</span> <span class="number">544</span> entries, <span class="number">0</span> to <span class="number">543</span></span><br><span class="line">Data columns (total <span class="number">6</span> columns):</span><br><span class="line">区域编码 <span class="number">544</span> non-null int64</span><br><span class="line">省市 <span class="number">544</span> non-null object</span><br><span class="line">疑似 <span class="number">544</span> non-null int64</span><br><span class="line">确诊 <span class="number">544</span> non-null int64</span><br><span class="line">死亡 <span class="number">544</span> non-null int64</span><br><span class="line">date <span class="number">544</span> non-null datetime64[ns]</span><br><span class="line">dtypes: datetime64[ns](<span class="number">1</span>), int64(<span class="number">4</span>), object(<span class="number">1</span>)</span><br><span class="line">memory usage: <span class="number">25.6</span>+ KB</span><br><span class="line"></span><br><span class="line">	区域编码	省市	疑似	确诊	死亡	date</span><br><span class="line"><span class="number">0</span>	<span class="number">500000</span>	重庆市	<span class="number">13</span>	<span class="number">9</span>	<span class="number">0</span>	<span class="number">2020</span><span class="number">-01</span><span class="number">-22</span></span><br><span class="line"><span class="number">1</span>	<span class="number">500000</span>	重庆市	<span class="number">71</span>	<span class="number">27</span>	<span class="number">0</span>	<span class="number">2020</span><span class="number">-01</span><span class="number">-23</span></span><br><span class="line"><span class="number">2</span>	<span class="number">500000</span>	重庆市	<span class="number">86</span>	<span class="number">57</span>	<span class="number">0</span>	<span class="number">2020</span><span class="number">-01</span><span class="number">-24</span></span><br><span class="line"><span class="number">3</span>	<span class="number">500000</span>	重庆市	<span class="number">146</span>	<span class="number">75</span>	<span class="number">0</span>	<span class="number">2020</span><span class="number">-01</span><span class="number">-25</span></span><br><span class="line"><span class="number">4</span>	<span class="number">500000</span>	重庆市	<span class="number">188</span>	<span class="number">110</span>	<span class="number">0</span>	<span class="number">2020</span><span class="number">-01</span><span class="number">-26</span></span><br></pre></td></tr></table></figure>

<p>我们也可以写成一行</p>
<pre><code class="python"><span class="comment"># 一行的写法</span>
df[<span class="string">'date'</span>] = pd.to_datetime(df[<span class="string">'date'</span>].astype(<span class="string">'str'</span>))</code></pre>
<h2 id="为什么需要时间数据？"><a href="#为什么需要时间数据？" class="headerlink" title="为什么需要时间数据？"></a>为什么需要时间数据？</h2><p>时间数据是可以按照年、月、日、时、分、秒进行聚合运算的，这可以让细碎的一眼看上去无规律的数据整理成有规律的统计数据。</p>
<p>有了时间数据，数据更适合研究一段时间内的变化，从而跳脱“静态数据”的牢笼，进行动态数据可视化。</p>
<p>有了时间数据还可能做一些更深的数据挖掘，比如时间序列分析等。</p>
<p>总的来说，字符串、数值、时间是三种不同的数据大类，做数据分析前一定要确定每种类型的数据是否已经符合清洗要求。</p>
<h2 id="按日期提取数据"><a href="#按日期提取数据" class="headerlink" title="按日期提取数据"></a>按日期提取数据</h2><p>如果现在需要筛选2020-2-1日的数据，这个需求本质上不再是列索引而是行索引，且这里是判断索引，代码写法如下：</p>
<pre><code class="python"><span class="comment"># 举例3</span>
<span class="comment"># 提取2020-2-1日的数据</span>
data_0201 = df[df[<span class="string">'date'</span>] == <span class="string">'2020-2-1'</span>]
data_0201.head()</code></pre>
<p>输出结果为：</p>
<pre><code class="python">区域编码    省市    疑似    确诊    死亡    date
<span class="number">10</span>    <span class="number">500000</span>    重庆市    <span class="number">425</span>    <span class="number">262</span>    <span class="number">1</span>    <span class="number">2020</span><span class="number">-02</span><span class="number">-01</span>
<span class="number">26</span>    <span class="number">330000</span>    浙江省    <span class="number">207</span>    <span class="number">661</span>    <span class="number">0</span>    <span class="number">2020</span><span class="number">-02</span><span class="number">-01</span>
<span class="number">42</span>    <span class="number">530000</span>    云南省    <span class="number">261</span>    <span class="number">99</span>    <span class="number">0</span>    <span class="number">2020</span><span class="number">-02</span><span class="number">-01</span>
<span class="number">58</span>    <span class="number">650000</span>    新疆维吾尔族自治区    <span class="number">21</span>    <span class="number">21</span>    <span class="number">0</span>    <span class="number">2020</span><span class="number">-02</span><span class="number">-01</span>
<span class="number">74</span>    <span class="number">810000</span>    香港特别行政区    <span class="number">0</span>    <span class="number">14</span>    <span class="number">0</span>    <span class="number">2020</span><span class="number">-02</span><span class="number">-01</span></code></pre>
<hr>
<p><strong>知识点</strong><br>由于我们已经把<code>date</code>字段改成了时间序列，所以这里可以用多种写法来提取2020-2-1日的数据，大家可以自己动手试试<br><code>df[df[&#39;date&#39;] == &#39;2020-2-1&#39;]</code><br><code>df[df[&#39;date&#39;] == &#39;20200201&#39;]</code><br><code>df[df[&#39;date&#39;] == &#39;2020/2/1&#39;]</code></p>
<hr>
<h2 id="按地区提取数据-判断索引逻辑"><a href="#按地区提取数据-判断索引逻辑" class="headerlink" title="按地区提取数据-判断索引逻辑"></a>按地区提取数据-判断索引逻辑</h2><p>如何提取“上海市”、“湖北省”的数据？</p>
<pre><code class="python"><span class="comment"># 举例4</span>
<span class="comment"># 提取湖北省数据</span>
data_hb = df[df[<span class="string">'省市'</span>] == <span class="string">'湖北省'</span>]

<span class="comment"># 提取上海市数据</span>
data_sh = df[df[<span class="string">'省市'</span>] == <span class="string">'上海市'</span>]

data_hb.head()
<span class="comment">#date_sh.head()</span></code></pre>
<h2 id="按地区提取数据-汇总统计逻辑"><a href="#按地区提取数据-汇总统计逻辑" class="headerlink" title="按地区提取数据-汇总统计逻辑"></a>按地区提取数据-汇总统计逻辑</h2><p>分别提取”全国”、”非湖北省”的数据，需要对现有数据做统计分析求和。</p>
<p>“全国”数据，这里应该是按照<code>date</code>字段做求和，代表不同日期的全国疫情情况<br>“非湖北省”数据，这里我们应该分2步<br>以<code>省市</code>字段先做判断，筛选非湖北省的其他数据<br>按照<code>date</code>字段做求和</p>
<pre><code class="python"><span class="comment"># 举例5</span>
<span class="comment"># 提取全国数据</span>
data_china = df.groupby(<span class="string">'date'</span>)[[<span class="string">'疑似'</span>,<span class="string">'确诊'</span>,<span class="string">'死亡'</span>]].sum()

<span class="comment"># 提取非湖北省数据</span>
data_nothb_all = df[df[<span class="string">'省市'</span>] != <span class="string">'湖北省'</span>]
data_nothb = data_nothb_all.groupby(<span class="string">'date'</span>)[[<span class="string">'疑似'</span>,<span class="string">'确诊'</span>,<span class="string">'死亡'</span>]].sum()

data_china.head()
<span class="comment">#data_nothb.head()</span></code></pre>
<hr>
<p><strong>知识点</strong><br><code>pandas.DataFrame.groupby()</code>，非常常用的数据分析函数，他的作用是：</p>
<p>根据某些条件将数据拆分成组<br>对每个组独立应用函数<br>将结果合并到一个数据结构中<br>特别注意的是<code>pandas.DataFrame.groupby()</code>函数只做数据的分组，不做计算，一般不会单独出现，而是在后方会跟上一个聚合函数进行计算，例如这里的<code>df.groupby(&#39;date&#39;)[[&#39;疑似&#39;,&#39;确诊&#39;,&#39;死亡&#39;]].sum()</code></p>
<hr>
<p>可以跟着步骤练习一下，有疑问可评论</p>
]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
  </entry>
  <entry>
    <title>新冠病毒疫情分析学习01-如何读取数据</title>
    <url>/2020/001-xg/</url>
    <content><![CDATA[<h1 id="如何读取数据"><a href="#如何读取数据" class="headerlink" title="如何读取数据"></a>如何读取数据</h1><p>源于课堂及整理，数据内包含的日期为20201.22-2020.2.13</p>
<p>作为一名合格的python数据分析师，面对原始数据，你要完成的工作有这以下内容</p>
<hr>
<font color=DarkRed>

<ol>
<li><p>读取数据，初步了解数据结构清洗数据</p>
</li>
<li><p>使数据能做进一步分析</p>
</li>
<li><p>思考几个问题：<br> 全国疫情确诊病例TOP10是哪些省市？<br> 如何查看不同日期的疫情情况？<br> 如何快速提取某一地区多日的疫情情况？</p>
</li>
</ol>
</font>



<hr>
<a id="more"></a>


<h2 id="笔记1：import-pandas"><a href="#笔记1：import-pandas" class="headerlink" title="笔记1：import pandas"></a>笔记1：import pandas</h2><p>pandas是一个常用的python数据分析工具库，由于pandas带有非常直观的二维数据结构<code>DataFrame</code>和<code>Series</code></p>
<p>在python中，我们使用<code>import...as...</code>语句来导入一个第三方包（工具库）pandas，并使用<code>pandas.read_excel()</code>来疫情数据。具体写法是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 举例1# 导入pandas包import pandas as pd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 并读取excel数据，赋值给变量df</span></span><br><span class="line">df = pd.read_excel(<span class="string">'$&#123;ohstudy&#125;/nCov/data_ncov.xlsx'</span>)</span><br><span class="line"><span class="comment">#括号内为文件绝对地址</span></span><br><span class="line"></span><br><span class="line">df.head(<span class="number">20</span>)</span><br><span class="line"><span class="comment">#查看前20行，不填则默认5行</span></span><br></pre></td></tr></table></figure>

<p>运行结果如下：<br><img src="/images/01-01.png" alt="测试图片"></p>
<h2 id="笔记2：查看数据基本情况"><a href="#笔记2：查看数据基本情况" class="headerlink" title="笔记2：查看数据基本情况"></a>笔记2：查看数据基本情况</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 举例2 # 查看数据基本情况</span></span><br><span class="line">df.info()</span><br></pre></td></tr></table></figure>
<p>输出结果为：<br><img src="/images/01-02.png" alt="测试图片"></p>
<h2 id="笔记3：查看数据的字段名-columns-、标签-索引-index-、值-value"><a href="#笔记3：查看数据的字段名-columns-、标签-索引-index-、值-value" class="headerlink" title="笔记3：查看数据的字段名(columns)、标签/索引(index)、值(value)"></a>笔记3：查看数据的字段名(columns)、标签/索引(index)、值(value)</h2><p><img src="/images/01-03.png" alt="测试图片"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 举例3# 查看数据的所有字段、标签/索引、值, 去掉注释符号#，以激活代码，默认只显示最后运行的代码结果</span></span><br><span class="line">df.columns</span><br><span class="line">df.index</span><br><span class="line">df.values</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="后续预告："><a href="#后续预告：" class="headerlink" title="后续预告："></a>后续预告：</h2><div id="echarts1858" style="width: 81%;height: 400px;margin: 0 auto"></div>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts1858'));

        // 指定图表的配置项和数据
        var option = {
    "title": [
        {
            "text": "\u6bcf\u65e5\u786e\u8bca\u7387\u53d8\u5316\u60c5\u51b5",
            "left": "auto",
            "top": "auto",
            "textStyle": {
                "fontSize": 18
            },
            "subtextStyle": {
                "fontSize": 12
            }
        }
    ],
    "toolbox": {
        "show": true,
        "orient": "vertical",
        "left": "95%",
        "top": "center",
        "feature": {
            "saveAsImage": {
                "show": true,
                "title": "save as image"
            },
            "restore": {
                "show": true,
                "title": "restore"
            },
            "dataView": {
                "show": true,
                "title": "data view"
            }
        }
    },
    "series_id": 6759913,
    "tooltip": {
        "trigger": "item",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "line"
        },
        "textStyle": {
            "fontSize": 14
        },
        "backgroundColor": "rgba(50,50,50,0.7)",
        "borderColor": "#333",
        "borderWidth": 0
    },
    "series": [
        {
            "type": "bar",
            "name": "\u786e\u8bca\u75c5\u4f8b",
            "data": [
                1297.0,
                1985.0,
                2761.0,
                4533.0,
                5995.0,
                7736.0,
                9720.0,
                11821.0,
                14411.0,
                17238.0,
                20471.0,
                24363.0,
                28060.0,
                31211.0,
                34598.0,
                37251.0,
                40235.0,
                42708.0,
                44730.0,
                59882.0,
                63932.0
            ],
            "barCategoryGap": "20%",
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 6759913
        },
        {
            "type": "bar",
            "name": "\u7591\u4f3c\u75c5\u4f8b",
            "data": [
                1965.0,
                2684.0,
                5794.0,
                6973.0,
                9239.0,
                12167.0,
                15238.0,
                17988.0,
                19544.0,
                21558.0,
                23214.0,
                23260.0,
                24702.0,
                26359.0,
                27657.0,
                28942.0,
                23589.0,
                21675.0,
                16067.0,
                13435.0,
                10109.0
            ],
            "barCategoryGap": "20%",
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 6759913
        },
        {
            "type": "line",
            "name": "\u786e\u8bca\u7387",
            "symbol": "emptyCircle",
            "symbolSize": 4,
            "smooth": false,
            "step": false,
            "showSymbol": true,
            "data": [
                [
                    "2020-01-24",
                    1.18
                ],
                [
                    "2020-01-25",
                    0.64
                ],
                [
                    "2020-01-26",
                    0.39
                ],
                [
                    "2020-01-27",
                    0.66
                ],
                [
                    "2020-01-28",
                    0.25
                ],
                [
                    "2020-01-29",
                    0.25
                ],
                [
                    "2020-01-30",
                    0.21
                ],
                [
                    "2020-01-31",
                    0.17
                ],
                [
                    "2020-02-01",
                    0.17
                ],
                [
                    "2020-02-02",
                    0.16
                ],
                [
                    "2020-02-03",
                    0.17
                ],
                [
                    "2020-02-04",
                    0.18
                ],
                [
                    "2020-02-05",
                    0.16
                ],
                [
                    "2020-02-06",
                    0.14
                ],
                [
                    "2020-02-07",
                    0.14
                ],
                [
                    "2020-02-08",
                    0.1
                ],
                [
                    "2020-02-09",
                    0.11
                ],
                [
                    "2020-02-10",
                    0.09
                ],
                [
                    "2020-02-11",
                    0.09
                ],
                [
                    "2020-02-12",
                    0.7
                ],
                [
                    "2020-02-13",
                    0.25
                ]
            ],
            "label": {
                "normal": {
                    "show": false,
                    "position": "top",
                    "textStyle": {
                        "fontSize": 12
                    }
                },
                "emphasis": {
                    "show": true,
                    "textStyle": {
                        "fontSize": 12
                    }
                }
            },
            "lineStyle": {
                "normal": {
                    "width": 1,
                    "opacity": 1,
                    "curveness": 0,
                    "type": "solid"
                }
            },
            "areaStyle": {
                "opacity": 0
            },
            "markPoint": {
                "data": []
            },
            "markLine": {
                "data": []
            },
            "seriesId": 6759913,
            "xAxisIndex": 0,
            "yAxisIndex": 1
        }
    ],
    "legend": [
        {
            "data": [
                "\u786e\u8bca\u75c5\u4f8b",
                "\u7591\u4f3c\u75c5\u4f8b",
                "\u786e\u8bca\u7387"
            ],
            "selectedMode": "multiple",
            "show": true,
            "left": "center",
            "top": "top",
            "orient": "horizontal",
            "textStyle": {
                "fontSize": 12
            }
        }
    ],
    "animation": true,
    "xAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "category",
            "splitLine": {
                "show": false
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            },
            "data": [
                "2020-01-24",
                "2020-01-25",
                "2020-01-26",
                "2020-01-27",
                "2020-01-28",
                "2020-01-29",
                "2020-01-30",
                "2020-01-31",
                "2020-02-01",
                "2020-02-02",
                "2020-02-03",
                "2020-02-04",
                "2020-02-05",
                "2020-02-06",
                "2020-02-07",
                "2020-02-08",
                "2020-02-09",
                "2020-02-10",
                "2020-02-11",
                "2020-02-12",
                "2020-02-13"
            ]
        }
    ],
    "yAxis": [
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        },
        {
            "show": true,
            "nameLocation": "middle",
            "nameGap": 25,
            "nameTextStyle": {
                "fontSize": 14
            },
            "axisTick": {
                "alignWithLabel": false
            },
            "inverse": false,
            "boundaryGap": true,
            "type": "value",
            "splitLine": {
                "show": true
            },
            "axisLine": {
                "lineStyle": {
                    "width": 1
                }
            },
            "axisLabel": {
                "interval": "auto",
                "formatter": "{value} ",
                "rotate": 0,
                "margin": 8,
                "textStyle": {
                    "fontSize": 12
                }
            }
        }
    ],
    "color": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3",
        "#f05b72",
        "#ef5b9c",
        "#f47920",
        "#905a3d",
        "#fab27b",
        "#2a5caa",
        "#444693",
        "#726930",
        "#b2d235",
        "#6d8346",
        "#ac6767",
        "#1d953f",
        "#6950a1",
        "#918597",
        "#f6f5ec"
    ],
    "dataZoom": [
        {
            "show": true,
            "type": "slider",
            "start": 0,
            "end": 100,
            "orient": "horizontal"
        }
    ]
};

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>

<blockquote class="blockquote-center"><blockquote>
<p><strong>示例文件下载：</strong><br><a href="/download/data_ncov.xlsx"">点击下载示例EXCEL</a></p>
</blockquote>
</blockquote>]]></content>
      <categories>
        <category>Python学习</category>
      </categories>
  </entry>
</search>
